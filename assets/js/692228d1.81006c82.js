"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[723],{3905:(e,t,n)=>{n.d(t,{Zo:()=>c,kt:()=>d});var r=n(7294);function l(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function a(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){l(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,r,l=function(e,t){if(null==e)return{};var n,r,l={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(l[n]=e[n]);return l}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(l[n]=e[n])}return l}var s=r.createContext({}),p=function(e){var t=r.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):a(a({},t),e)),n},c=function(e){var t=p(e.components);return r.createElement(s.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},m=r.forwardRef((function(e,t){var n=e.components,l=e.mdxType,o=e.originalType,s=e.parentName,c=i(e,["components","mdxType","originalType","parentName"]),m=p(n),d=l,f=m["".concat(s,".").concat(d)]||m[d]||u[d]||o;return n?r.createElement(f,a(a({ref:t},c),{},{components:n})):r.createElement(f,a({ref:t},c))}));function d(e,t){var n=arguments,l=t&&t.mdxType;if("string"==typeof e||l){var o=n.length,a=new Array(o);a[0]=m;var i={};for(var s in t)hasOwnProperty.call(t,s)&&(i[s]=t[s]);i.originalType=e,i.mdxType="string"==typeof e?e:l,a[1]=i;for(var p=2;p<o;p++)a[p]=n[p];return r.createElement.apply(null,a)}return r.createElement.apply(null,n)}m.displayName="MDXCreateElement"},7376:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>a,default:()=>u,frontMatter:()=>o,metadata:()=>i,toc:()=>p});var r=n(7462),l=(n(7294),n(3905));const o={sidebar_position:1,title:"Installing Otterize in Kubernetes"},a=void 0,i={unversionedId:"guides/k8s-installation",id:"guides/k8s-installation",title:"Installing Otterize in Kubernetes",description:"Install Otterize on a Kubernetes cluster using helm.",source:"@site/docs/3-guides/1-k8s-installation.mdx",sourceDirName:"3-guides",slug:"/guides/k8s-installation",permalink:"/guides/k8s-installation",draft:!1,editUrl:"https://github.com/otterize/docs/edit/main/docs/3-guides/1-k8s-installation.mdx",tags:[],version:"current",sidebarPosition:1,frontMatter:{sidebar_position:1,title:"Installing Otterize in Kubernetes"},sidebar:"docSidebar",previous:{title:"Guides",permalink:"/guides/"},next:{title:"IBAC in Kubernetes via network policies",permalink:"/guides/k8s-ibac-via-network-policies/"}},s={},p=[{value:"Install Otterize",id:"install-otterize",level:2},{value:"Verify network policies are enforceable",id:"verify-network-policies-are-enforceable",level:2},{value:"Install Otterize components separately",id:"install-otterize-components-separately",level:2},{value:"Network policies only",id:"network-policies-only",level:3},{value:"Verify network policies are enforceable",id:"verify-network-policies-are-enforceable-1",level:4},{value:"Kafka &amp; mTLS only",id:"kafka--mtls-only",level:3},{value:"Uninstall Otterize",id:"uninstall-otterize",level:2},{value:"Before uninstalling",id:"before-uninstalling",level:3},{value:"Uninstallation",id:"uninstallation",level:3}],c={toc:p};function u(e){let{components:t,...n}=e;return(0,l.kt)("wrapper",(0,r.Z)({},c,n,{components:t,mdxType:"MDXLayout"}),(0,l.kt)("p",null,"Install Otterize on a Kubernetes cluster using helm."),(0,l.kt)("h2",{id:"install-otterize"},"Install Otterize"),(0,l.kt)("p",null,"Use Helm to install the latest version of Otterize:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-shell"},"helm repo add otterize https://helm.otterize.com\nhelm repo update\nhelm install otterize otterize/otterize-kubernetes -n otterize-system --create-namespace\n")),(0,l.kt)("p",null,"You can add the ",(0,l.kt)("inlineCode",{parentName:"p"},"--wait")," flag for Helm to wait for deployment to complete and all pods to be Ready, or manually watch for all pods to be ",(0,l.kt)("inlineCode",{parentName:"p"},"Ready")," using ",(0,l.kt)("inlineCode",{parentName:"p"},"kubectl get pods -n otterize-system -w"),"."),(0,l.kt)("h2",{id:"verify-network-policies-are-enforceable"},"Verify network policies are enforceable"),(0,l.kt)("p",null,"To enforce network policies, a Kubernetes cluster must be using a CNI network plugin\nthat supports network policies."),(0,l.kt)("p",null,"If you don't have a CNI installed, a popular choice is Calico by Tigera.\nTo install it, please follow the\n",(0,l.kt)("a",{parentName:"p",href:"https://projectcalico.docs.tigera.io/getting-started/kubernetes/helm"},"instructions"),"\nand return to this tutorial."),(0,l.kt)("h2",{id:"install-otterize-components-separately"},"Install Otterize components separately"),(0,l.kt)("p",null,"You can install Otterize components by disabling the deployment of some of the components in the chart.\nFor a complete list of the Helm values the chart accepts, consult the ",(0,l.kt)("a",{parentName:"p",href:"/components/otterize/helm-chart"},"Helm chart documentation"),"."),(0,l.kt)("h3",{id:"network-policies-only"},"Network policies only"),(0,l.kt)("p",null,"Use Helm to install the latest version of Otterize:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-shell"},"helm repo add otterize https://helm.otterize.com\nhelm repo update\nhelm install otterize otterize/otterize-kubernetes -n otterize-system --create-namespace --set deployment.spire=false \\\n--set deployment.spireIntegrationOperator=false --set intentsOperator.operator.autoGenerateTLSUsingSpireIntegration=false\n")),(0,l.kt)("p",null,"You can add the ",(0,l.kt)("inlineCode",{parentName:"p"},"--wait")," flag for Helm to wait for deployment to complete and all pods to be Ready, or manually watch for all pods to be ",(0,l.kt)("inlineCode",{parentName:"p"},"Ready")," using ",(0,l.kt)("inlineCode",{parentName:"p"},"kubectl get pods -n otterize-system -w"),"."),(0,l.kt)("h4",{id:"verify-network-policies-are-enforceable-1"},"Verify network policies are enforceable"),(0,l.kt)("p",null,"To enforce network policies, a Kubernetes cluster must be using a CNI network plugin\nthat supports network policies."),(0,l.kt)("p",null,"If you don't have a CNI installed, a popular choice is Calico by Tigera.\nTo install it, please follow the\n",(0,l.kt)("a",{parentName:"p",href:"https://projectcalico.docs.tigera.io/getting-started/kubernetes/helm"},"instructions"),"\nand return to this tutorial."),(0,l.kt)("h3",{id:"kafka--mtls-only"},"Kafka & mTLS only"),(0,l.kt)("p",null,"Use Helm to install the latest version of Otterize:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-shell"},"helm repo add otterize https://helm.otterize.com\nhelm repo update\nhelm install -n otterize-system --create-namespace \\\n--set intentsOperator.operator.enableNetworkPolicyCreation=false otterize otterize/otterize-kubernetes\n")),(0,l.kt)("p",null,"You can add the ",(0,l.kt)("inlineCode",{parentName:"p"},"--wait")," flag for Helm to wait for deployment to complete and all pods to be Ready, or manually watch for all pods to be ",(0,l.kt)("inlineCode",{parentName:"p"},"Ready")," using ",(0,l.kt)("inlineCode",{parentName:"p"},"kubectl get pods -n otterize-system -w"),"."),(0,l.kt)("h2",{id:"uninstall-otterize"},"Uninstall Otterize"),(0,l.kt)("h3",{id:"before-uninstalling"},"Before uninstalling"),(0,l.kt)("p",null,"Before uninstalling Otterize, you should make sure to delete any resources created by users: ",(0,l.kt)("inlineCode",{parentName:"p"},"ClientIntents")," and ",(0,l.kt)("inlineCode",{parentName:"p"},"KafkaServerConfig"),"s."),(0,l.kt)("p",null,"When you remove these resources, the Intents Operator will clean up network policies and Kafka ACLs it created. If you remove the operator before doing so, it will not be able to clean up."),(0,l.kt)("p",null,"If, however, you want the network policies and ACLs to stay in place (because you're redeploying with different configuration, for example), don't remove them."),(0,l.kt)("ol",null,(0,l.kt)("li",{parentName:"ol"},"First check if any ",(0,l.kt)("inlineCode",{parentName:"li"},"ClientIntents")," exist: ",(0,l.kt)("inlineCode",{parentName:"li"},"kubectl get clientintents --all-namespaces")),(0,l.kt)("li",{parentName:"ol"},"If so, remove them."),(0,l.kt)("li",{parentName:"ol"},"Check if any ",(0,l.kt)("inlineCode",{parentName:"li"},"KafkaServerConfig"),"s exist: ",(0,l.kt)("inlineCode",{parentName:"li"},"kubectl get kafkaserverconfig --all-namespaces")),(0,l.kt)("li",{parentName:"ol"},"If so, remove them.")),(0,l.kt)("p",null,"It's important to remove ",(0,l.kt)("inlineCode",{parentName:"p"},"ClientIntents")," before removing ",(0,l.kt)("inlineCode",{parentName:"p"},"KafkaServerConfig"),"s, as once you remove the ",(0,l.kt)("inlineCode",{parentName:"p"},"KafkaServerConfig")," for a Kafka cluster, the intents operator will no longer know how to connect to it and perform cleanup."),(0,l.kt)("h3",{id:"uninstallation"},"Uninstallation"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"helm uninstall otterize -n otterize-system\n")))}u.isMDXComponent=!0}}]);