"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[750],{3905:(e,t,a)=>{a.d(t,{Zo:()=>p,kt:()=>u});var n=a(7294);function r(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function o(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function i(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?o(Object(a),!0).forEach((function(t){r(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):o(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function l(e,t){if(null==e)return{};var a,n,r=function(e,t){if(null==e)return{};var a,n,r={},o=Object.keys(e);for(n=0;n<o.length;n++)a=o[n],t.indexOf(a)>=0||(r[a]=e[a]);return r}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)a=o[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(r[a]=e[a])}return r}var s=n.createContext({}),c=function(e){var t=n.useContext(s),a=t;return e&&(a="function"==typeof e?e(t):i(i({},t),e)),a},p=function(e){var t=c(e.components);return n.createElement(s.Provider,{value:t},e.children)},m={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},d=n.forwardRef((function(e,t){var a=e.components,r=e.mdxType,o=e.originalType,s=e.parentName,p=l(e,["components","mdxType","originalType","parentName"]),d=c(a),u=r,k=d["".concat(s,".").concat(u)]||d[u]||m[u]||o;return a?n.createElement(k,i(i({ref:t},p),{},{components:a})):n.createElement(k,i({ref:t},p))}));function u(e,t){var a=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var o=a.length,i=new Array(o);i[0]=d;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l.mdxType="string"==typeof e?e:r,i[1]=l;for(var c=2;c<o;c++)i[c]=a[c];return n.createElement.apply(null,i)}return n.createElement.apply(null,a)}d.displayName="MDXCreateElement"},6387:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>s,contentTitle:()=>i,default:()=>m,frontMatter:()=>o,metadata:()=>l,toc:()=>c});var n=a(7462),r=(a(7294),a(3905));const o={sidebar_position:5,title:"Deploy mTLS between pods and Kafka"},i="Kafka + mTLS",l={unversionedId:"documentation/quick-tutorials/kafka-mtls",id:"documentation/quick-tutorials/kafka-mtls",title:"Deploy mTLS between pods and Kafka",description:"This tutorial will walk you through deploying mTLS certificates between a client and a Kafka cluster.",source:"@site/docs/documentation/2-quick-tutorials/5-kafka-mtls.md",sourceDirName:"documentation/2-quick-tutorials",slug:"/documentation/quick-tutorials/kafka-mtls",permalink:"/documentation/quick-tutorials/kafka-mtls",draft:!1,editUrl:"https://github.com/otterize/docs/edit/main/docs/documentation/2-quick-tutorials/5-kafka-mtls.md",tags:[],version:"current",sidebarPosition:5,frontMatter:{sidebar_position:5,title:"Deploy mTLS between pods and Kafka"},sidebar:"docSidebar",previous:{title:"Deploy mTLS between pods",permalink:"/documentation/quick-tutorials/mtls"},next:{title:"Installation",permalink:"/documentation/guides/installation"}},s={},c=[{value:"Install Otterize",id:"install-otterize",level:2},{value:"Configure Kafka (explainer)",id:"configure-kafka-explainer",level:2},{value:"Install Kafka",id:"install-kafka",level:2},{value:"Pod annotation  (explainer)",id:"pod-annotation--explainer",level:2},{value:"Deploy",id:"deploy",level:2},{value:"What happened behind the scenes",id:"what-happened-behind-the-scenes",level:2},{value:"Teardown",id:"teardown",level:2}],p={toc:c};function m(e){let{components:t,...a}=e;return(0,r.kt)("wrapper",(0,n.Z)({},p,a,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"kafka--mtls"},"Kafka + mTLS"),(0,r.kt)("p",null,"This tutorial will walk you through deploying mTLS certificates between a client and a Kafka cluster.\nWe will:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Install Otterize"),(0,r.kt)("li",{parentName:"ul"},"Learn how to configure bitnami's kafka chart to use Otterize-provided mTLS credentials"),(0,r.kt)("li",{parentName:"ul"},"Deploy a Kafka cluster"),(0,r.kt)("li",{parentName:"ul"},"Learn how to annotate pods for automatic credentials generation"),(0,r.kt)("li",{parentName:"ul"},"Deploy a client connecting to Kafka with mTLS"),(0,r.kt)("li",{parentName:"ul"},"Inspect the credentials")),(0,r.kt)("h2",{id:"install-otterize"},"Install Otterize"),(0,r.kt)("admonition",{type:"note"},(0,r.kt)("p",{parentName:"admonition"},"If you already have Otterize installed on your cluster you can skip this step.")),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},"To install Otterize run the following commands",(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-shell"},"helm repo add otterize https://otterize.github.io/helm-charts\nhelm repo update\nhelm upgrade --install --create-namespace -n otterize otterize otterize/otterize-kubernetes\n"))),(0,r.kt)("li",{parentName:"ol"},"It can take several minutes for the pods to ",(0,r.kt)("strong",{parentName:"li"},"stabilize")," into the ",(0,r.kt)("inlineCode",{parentName:"li"},"Ready")," and ",(0,r.kt)("inlineCode",{parentName:"li"},"Running")," states. You can monitor with\nthe following command:",(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre"},"kubectl get pods -n otterize\n")),"After ",(0,r.kt)("strong",{parentName:"li"},"stabilization")," you should see:",(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"NAME                                                             READY   STATUS    RESTARTS      AGE\nintents-operator-controller-manager-6b97596d54-5qxcw             2/2     Running   0             53s\notterize-spire-agent-9s8w7                                       1/1     Running   0             54s\notterize-spire-agent-np2wf                                       1/1     Running   1 (33s ago)   54s\notterize-spire-server-0                                          1/1     Running   0             53s\notterize-watcher-77db87cfcd-xhsrk                                1/1     Running   0             53s\nspire-integration-operator-controller-manager-65b8bf57b5-mpltl   2/2     Running   0             53s\n")))),(0,r.kt)("h2",{id:"configure-kafka-explainer"},"Configure Kafka (explainer)"),(0,r.kt)("p",null,"We will deploy a Kafka cluster using bitnami's ",(0,r.kt)("a",{parentName:"p",href:"https://github.com/bitnami/charts/tree/master/bitnami/kafka"},"chart"),"\nTo configure the chart to use the Otterize-provided credentials we need to configure it to"),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},"Use SSL for it's listeners"),(0,r.kt)("li",{parentName:"ol"},"Tell Otterize using pod annotations how it requires it's credentials"),(0,r.kt)("li",{parentName:"ol"},"Authenticate using mTLS credentials provided as a K8s secret")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-yaml"},'listeners: # 1. Use SSL for it\'s listeners\n  - "CLIENT://:9092"\n  - "INTERNAL://:9093"\nadvertisedListeners:\n  - "CLIENT://:9092"\n  - "INTERNAL://:9093"\nlistenerSecurityProtocolMap: "INTERNAL:SSL,CLIENT:SSL"\npodAnnotations: # 2. Annotations for Otterize to generate credentials\n  otterize/cert-type: jks\n  otterize/tls-secret-name: kafka-tls-secret\n  otterize/truststore-file-name: kafka.truststore.jks\n  otterize/keystore-file-name: kafka-keystore.jks\n  otterize/dns-names: "kafka-0.kafka-headless.kafka.svc.cluster.local,kafka.kafka.svc.cluster.local"\nauth: # 3. Authenticate clients using mTLS\n  clientProtocol: mtls\n  interBrokerProtocol: mtls\n  tls:\n    type: jks\n    existingSecrets:\n      - kafka-tls-secret\n    password: password\nauthorizerClassName: kafka.security.authorizer.AclAuthorizer\nallowEveryoneIfNoAclFound: true\n')),(0,r.kt)("h2",{id:"install-kafka"},"Install Kafka"),(0,r.kt)("p",null,"The following command will deploy a Kafka cluster configured to use Otterize-provided mTLS credentials."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"helm repo add bitnami https://charts.bitnami.com/bitnami\nhelm upgrade --install --create-namespace -n kafka kafka \\\n--version 14.x.x bitnami/kafka \\\n-f https://docs.otterize.com/code-examples/kafka-mtls/helm/values.yaml\n")),(0,r.kt)("p",null,"It can take several minutes for the pods to ",(0,r.kt)("strong",{parentName:"p"},"stabilize")," into the ",(0,r.kt)("inlineCode",{parentName:"p"},"Ready")," and ",(0,r.kt)("inlineCode",{parentName:"p"},"Running")," states. You can monitor with\nthe following command:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"kubectl get pods -n kafka\n")),(0,r.kt)("p",null,"After ",(0,r.kt)("strong",{parentName:"p"},"stabilization")," you should see:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"NAME                READY   STATUS    RESTARTS      AGE\nkafka-0             1/1     Running   1 (25s ago)   45s\nkafka-zookeeper-0   1/1     Running   0             56s\n")),(0,r.kt)("h2",{id:"pod-annotation--explainer"},"Pod annotation  (explainer)"),(0,r.kt)("p",null,"To generate credentials for a pod we simply need to update the deployment by annotating it.\nThe required steps are to"),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},"Annotate the pod - Otterize automatically identifies the ",(0,r.kt)("inlineCode",{parentName:"li"},"otterize/credentials-secret-name")," annotation, generates\nmTLS credentials, and stores them as K8s secret named as the annotation value."),(0,r.kt)("li",{parentName:"ol"},"Mount the credentials stored as a K8s secret as a volume"),(0,r.kt)("li",{parentName:"ol"},"Mount the volume into the container")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-yaml"},"spec:\n  template:\n    metadata:\n      ...\n      annotations:\n        # highlight-next-line\n        otterize/credentials-secret-name: client-credentials-secret       # 1 Generate credentials\n    spec:\n      volumes:\n        # highlight-start\n        - name: otterize-credentials\n          secret:\n            secretName: client-credentials-secret                      # 2 Mount credentials as a volume\n            # highlight-end\n      containers:\n        - name: client\n        ...\n        volumeMounts:\n          # highlight-start\n          - name: otterize-credentials\n            mountPath: /var/otterize/credentials                      # 3 Mount volume into container \n            readOnly: true\n            # highlight-end\n")),(0,r.kt)("admonition",{type:"info"},(0,r.kt)("p",{parentName:"admonition"},"Visit the ",(0,r.kt)("a",{parentName:"p",href:"/documentation/credential-operator/behavior"},"Behavior")," section to view all parameters available as pod\nannotation for generating mTLS credentials.")),(0,r.kt)("h2",{id:"deploy"},"Deploy"),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},"Deploy a client connecting to Kafka",(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"kubectl apply -f https://docs.otterize.com/code-examples/kafka-mtls/all.yaml\n"))),(0,r.kt)("li",{parentName:"ol"},"Check that the ",(0,r.kt)("inlineCode",{parentName:"li"},"client")," ",(0,r.kt)("inlineCode",{parentName:"li"},"pod")," was deployed",(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"kubectl get pods -n otterize-tutorial-kafka-mtls\n")),"You should see",(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre"},"NAME                     READY   STATUS    RESTARTS   AGE\nclient-dcff84688-4b2xm   1/1     Running   0          32s\n")))),(0,r.kt)("admonition",{type:"note"},(0,r.kt)("p",{parentName:"admonition"},"Client logs require improvement. Client is compiling on startup so it can take some time before it's ready.\nNeed to solve this.")),(0,r.kt)("ol",{start:3},(0,r.kt)("li",{parentName:"ol"},"Check that the client succesfully connected to Kafka using mTLS",(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"kubectl logs --tail=5 -n otterize-tutorial-kafka-mtls deploy/client\n")),"You should get",(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-bash"},'[sarama] 2022/09/04 11:52:48 Successfully initialized new client\ntime="2022-09-04T11:52:48Z" level=info msg=Topics topics="[test]"\ntime="2022-09-04T11:52:48Z" level=info msg="Ensuring topic" topicName=test\n[sarama] 2022/09/04 11:52:48 Connected to broker at kafka-0.kafka-headless.kafka.svc.cluster.local:9092 (registered as #0)\ntime="2022-09-04T11:52:48Z" level=info msg="Ensured topic" topicName=test\n')))),(0,r.kt)("h2",{id:"what-happened-behind-the-scenes"},"What happened behind the scenes"),(0,r.kt)("ol",{start:3},(0,r.kt)("li",{parentName:"ol"},"We configured the Kafka helm chart to",(0,r.kt)("ol",{parentName:"li"},(0,r.kt)("li",{parentName:"ol"},"Use the SSL protocol for its listeners"),(0,r.kt)("li",{parentName:"ol"},"Annotated its pod to let Otterize know it should generate mTLS credentials in the Java Key Store and Java Trust\nStore format and store them as a K8s secret."),(0,r.kt)("li",{parentName:"ol"},"Use the K8s secret for mTLS by configuring Kafka's auth mechanism."))),(0,r.kt)("li",{parentName:"ol"},"We annotated the client pod to let Otterize know it should generate mTLS credentials in a PEM format."),(0,r.kt)("li",{parentName:"ol"},"The Otterize SPIRE integration operator",(0,r.kt)("ol",{parentName:"li"},(0,r.kt)("li",{parentName:"ol"},"For each of ","[Kafka, client]",(0,r.kt)("ol",{parentName:"li"},(0,r.kt)("li",{parentName:"ol"},"Created an entries for the annotated pods with the SPIRE server."),(0,r.kt)("li",{parentName:"ol"},"Generated matching mTLS credentials using the SPIRE server."),(0,r.kt)("li",{parentName:"ol"},"Stored the mTLS credentials into a K8s secrets."))))),(0,r.kt)("li",{parentName:"ol"},"The secrets were mounted (separately) into each pod's container."),(0,r.kt)("li",{parentName:"ol"},"The client pod connected and authenticated to Kafka using mTLS.")),(0,r.kt)("h2",{id:"teardown"},"Teardown"),(0,r.kt)("p",null,"To remove the deployed resources run"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"kubectl delete namespace otterize-tutorial-kafka-mtls\nhelm uninstall -n kafka kafka\nhelm repo remove bitnami\n")))}m.isMDXComponent=!0}}]);