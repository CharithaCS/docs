"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[665],{3905:(e,t,n)=>{n.d(t,{Zo:()=>u,kt:()=>m});var a=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function l(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?l(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):l(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},l=Object.keys(e);for(a=0;a<l.length;a++)n=l[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(a=0;a<l.length;a++)n=l[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var s=a.createContext({}),c=function(e){var t=a.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},u=function(e){var t=c(e.components);return a.createElement(s.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},p=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,l=e.originalType,s=e.parentName,u=i(e,["components","mdxType","originalType","parentName"]),p=c(n),m=r,h=p["".concat(s,".").concat(m)]||p[m]||d[m]||l;return n?a.createElement(h,o(o({ref:t},u),{},{components:n})):a.createElement(h,o({ref:t},u))}));function m(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var l=n.length,o=new Array(l);o[0]=p;var i={};for(var s in t)hasOwnProperty.call(t,s)&&(i[s]=t[s]);i.originalType=e,i.mdxType="string"==typeof e?e:r,o[1]=i;for(var c=2;c<l;c++)o[c]=n[c];return a.createElement.apply(null,o)}return a.createElement.apply(null,n)}p.displayName="MDXCreateElement"},5162:(e,t,n)=>{n.d(t,{Z:()=>o});var a=n(7294),r=n(6010);const l="tabItem_Ymn6";function o(e){let{children:t,hidden:n,className:o}=e;return a.createElement("div",{role:"tabpanel",className:(0,r.Z)(l,o),hidden:n},t)}},5488:(e,t,n)=>{n.d(t,{Z:()=>m});var a=n(7462),r=n(7294),l=n(6010),o=n(2389),i=n(7392),s=n(7094),c=n(2466);const u="tabList__CuJ",d="tabItem_LNqP";function p(e){var t,n;const{lazy:o,block:p,defaultValue:m,values:h,groupId:k,className:f}=e,g=r.Children.map(e.children,(e=>{if((0,r.isValidElement)(e)&&"value"in e.props)return e;throw new Error("Docusaurus error: Bad <Tabs> child <"+("string"==typeof e.type?e.type:e.type.name)+'>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.')})),v=null!=h?h:g.map((e=>{let{props:{value:t,label:n,attributes:a}}=e;return{value:t,label:n,attributes:a}})),b=(0,i.l)(v,((e,t)=>e.value===t.value));if(b.length>0)throw new Error('Docusaurus error: Duplicate values "'+b.map((e=>e.value)).join(", ")+'" found in <Tabs>. Every value needs to be unique.');const y=null===m?m:null!=(t=null!=m?m:null==(n=g.find((e=>e.props.default)))?void 0:n.props.value)?t:g[0].props.value;if(null!==y&&!v.some((e=>e.value===y)))throw new Error('Docusaurus error: The <Tabs> has a defaultValue "'+y+'" but none of its children has the corresponding value. Available values are: '+v.map((e=>e.value)).join(", ")+". If you intend to show no default tab, use defaultValue={null} instead.");const{tabGroupChoices:x,setTabGroupChoices:T}=(0,s.U)(),[N,w]=(0,r.useState)(y),S=[],{blockElementScrollPositionUntilNextRender:O}=(0,c.o5)();if(null!=k){const e=x[k];null!=e&&e!==N&&v.some((t=>t.value===e))&&w(e)}const E=e=>{const t=e.currentTarget,n=S.indexOf(t),a=v[n].value;a!==N&&(O(t),w(a),null!=k&&T(k,String(a)))},P=e=>{var t;let n=null;switch(e.key){case"ArrowRight":{var a;const t=S.indexOf(e.currentTarget)+1;n=null!=(a=S[t])?a:S[0];break}case"ArrowLeft":{var r;const t=S.indexOf(e.currentTarget)-1;n=null!=(r=S[t])?r:S[S.length-1];break}}null==(t=n)||t.focus()};return r.createElement("div",{className:(0,l.Z)("tabs-container",u)},r.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,l.Z)("tabs",{"tabs--block":p},f)},v.map((e=>{let{value:t,label:n,attributes:o}=e;return r.createElement("li",(0,a.Z)({role:"tab",tabIndex:N===t?0:-1,"aria-selected":N===t,key:t,ref:e=>S.push(e),onKeyDown:P,onFocus:E,onClick:E},o,{className:(0,l.Z)("tabs__item",d,null==o?void 0:o.className,{"tabs__item--active":N===t})}),null!=n?n:t)}))),o?(0,r.cloneElement)(g.filter((e=>e.props.value===N))[0],{className:"margin-top--md"}):r.createElement("div",{className:"margin-top--md"},g.map(((e,t)=>(0,r.cloneElement)(e,{key:t,hidden:e.props.value!==N})))))}function m(e){const t=(0,o.Z)();return r.createElement(p,(0,a.Z)({key:String(t)},e))}},4720:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>u,contentTitle:()=>s,default:()=>m,frontMatter:()=>i,metadata:()=>c,toc:()=>d});var a=n(7462),r=(n(7294),n(3905)),l=n(5488),o=n(5162);const i={sidebar_position:8,title:"Kubernetes mTLS"},s=void 0,c={unversionedId:"reference/mtls/README",id:"reference/mtls/README",title:"Kubernetes mTLS",description:"Otterize can automatically provision mTLS credentials using Kubernetes pod identities",source:"@site/docs/reference/mtls/README.mdx",sourceDirName:"reference/mtls",slug:"/reference/mtls/",permalink:"/reference/mtls/",draft:!1,editUrl:"https://github.com/otterize/docs/edit/main/docs/reference/mtls/README.mdx",tags:[],version:"current",sidebarPosition:8,frontMatter:{sidebar_position:8,title:"Kubernetes mTLS"},sidebar:"docSidebar",previous:{title:"Network policies deep dive",permalink:"/reference/network-policies/"},next:{title:"Security",permalink:"/security/"}},u={},d=[{value:"Provisioning mTLS credentials",id:"provisioning-mtls-credentials",level:2},{value:"Using mTLS credentials",id:"using-mtls-credentials",level:2},{value:"HTTP",id:"http",level:3},{value:"Client",id:"client",level:4},{value:"Server",id:"server",level:4},{value:"Kafka",id:"kafka",level:3},{value:"Verify the generated mTLS credentials",id:"verify-the-generated-mtls-credentials",level:2},{value:"What&#39;s next",id:"whats-next",level:2}],p={toc:d};function m(e){let{components:t,...n}=e;return(0,r.kt)("wrapper",(0,a.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("p",null,"Otterize can automatically provision mTLS credentials using Kubernetes pod identities\nand integrating with ",(0,r.kt)("a",{parentName:"p",href:"https://spiffe.io/docs/latest/spire-about/spire-concepts/"},"SPIFFE/SPIRE"),".\nYou can see a simple example in the tutorial: ",(0,r.kt)("a",{parentName:"p",href:"/quick-tutorials/k8s-mtls"},"deploy mTLS between pods"),".\nHere we document how to generate mTLS credentials, how to consume them in a variety of languages,\nand how to verify them if needed."),(0,r.kt)("h2",{id:"provisioning-mtls-credentials"},"Provisioning mTLS credentials"),(0,r.kt)("p",null,"To provision mTLS credentials for a client pod with Otterize, make the following 3 simple changes to its Kubernetes spec:"),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("strong",{parentName:"li"},"Generate credentials"),": add the ",(0,r.kt)("inlineCode",{parentName:"li"},"credentials-operator.otterize.com/tls-secret-name")," annotation, which tells the Otterize\nCredentials operator to generate mTLS credentials, and to store them in a Kubernetes secret\nwhose name is the value of this annotation."),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("strong",{parentName:"li"},"Expose credentials in a volume"),": add a volume containing this secret to the pod."),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("strong",{parentName:"li"},"Mount the volume"),": mount the volume in every container in the pod.")),(0,r.kt)("p",null,"Here is the general structure for such a spec:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-yaml"},'spec:\n  template:\n    metadata:\n      annotations:\n        # highlight-next-line\n        # 1. Generate credentials as a secret called "client-credentials-secret":\n        credentials-operator.otterize.com/tls-secret-name: client-credentials-secret\n        ...\n    spec:\n      volumes:\n        # highlight-start\n        # 2. Create a volume containing this secret:\n        - name: otterize-credentials\n          secret:\n            secretName: client-credentials-secret\n        # highlight-end\n        ...\n      containers:\n        - name: client\n          ...\n          volumeMounts:\n            # highlight-start\n            # 3. Mount volume into container\n            - name: otterize-credentials\n              mountPath: /var/otterize/credentials\n              readOnly: true\n            # highlight-end\n')),(0,r.kt)("admonition",{type:"tip"},(0,r.kt)("p",{parentName:"admonition"},"For the complete list of annotation parameters please consult the\n",(0,r.kt)("a",{parentName:"p",href:"/reference/configuration/credentials-operator/"},"Otterize Credentials operator documentation"),".")),(0,r.kt)("admonition",{type:"tip"},(0,r.kt)("p",{parentName:"admonition"},"Certificates are automatically refreshed before expiring. We recommend loading certificates each time before using them, to avoid\nusing expired certificates.")),(0,r.kt)("h2",{id:"using-mtls-credentials"},"Using mTLS credentials"),(0,r.kt)("p",null,"The generated mTLS credentials can be used by services directly in their native programming languages via common SDKs.\nThe following examples showcase how to use the generated mTLS credentials for mTLS between:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"HTTP servers and their clients"),(0,r.kt)("li",{parentName:"ul"},"Kafka brokers and their clients")),(0,r.kt)("h3",{id:"http"},"HTTP"),(0,r.kt)("h4",{id:"client"},"Client"),(0,r.kt)(l.Z,{mdxType:"Tabs"},(0,r.kt)(o.Z,{value:"js",label:"JavaScript",default:!0,mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},"\n> include file not found: ../../../../static/code-examples/code/mtls/http/client.js --\x3e /home/runner/work/docs/static/code-examples/code/mtls/http/client.js\n\n"))),(0,r.kt)(o.Z,{value:"go",label:"Go",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-go"},"\n> include file not found: ../../../../static/code-examples/code/mtls/http/client.go --\x3e /home/runner/work/docs/static/code-examples/code/mtls/http/client.go\n\n"))),(0,r.kt)(o.Z,{value:"python",label:"Python",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},"\n> include file not found: ../../../../static/code-examples/code/mtls/http/client.py --\x3e /home/runner/work/docs/static/code-examples/code/mtls/http/client.py\n\n"))),(0,r.kt)(o.Z,{value:"curl",label:"cURL",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-shell"},"\n> include file not found: ../../../../static/code-examples/code/mtls/http/client.sh --\x3e /home/runner/work/docs/static/code-examples/code/mtls/http/client.sh\n\n")))),(0,r.kt)("h4",{id:"server"},"Server"),(0,r.kt)(l.Z,{mdxType:"Tabs"},(0,r.kt)(o.Z,{value:"js",label:"JavaScript",default:!0,mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},"\n> include file not found: ../../../../static/code-examples/code/mtls/http/server.js --\x3e /home/runner/work/docs/static/code-examples/code/mtls/http/server.js\n\n"))),(0,r.kt)(o.Z,{value:"go",label:"Go",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-go"},"\n> include file not found: ../../../../static/code-examples/code/mtls/http/server.go --\x3e /home/runner/work/docs/static/code-examples/code/mtls/http/server.go\n\n"))),(0,r.kt)(o.Z,{value:"python",label:"Python",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},"\n> include file not found: ../../../../static/code-examples/code/mtls/http/server.py --\x3e /home/runner/work/docs/static/code-examples/code/mtls/http/server.py\n\n")))),(0,r.kt)("h3",{id:"kafka"},"Kafka"),(0,r.kt)(l.Z,{mdxType:"Tabs"},(0,r.kt)(o.Z,{value:"js",label:"JavaScript",default:!0,mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},"\n> include file not found: ../../../../static/code-examples/code/mtls/kafka/client.js --\x3e /home/runner/work/docs/static/code-examples/code/mtls/kafka/client.js\n\n"))),(0,r.kt)(o.Z,{value:"go",label:"Go",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},"\n> include file not found: ../../../../static/code-examples/code/mtls/kafka/client.go --\x3e /home/runner/work/docs/static/code-examples/code/mtls/kafka/client.go\n\n"))),(0,r.kt)(o.Z,{value:"python",label:"Python",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},"\n> include file not found: ../../../../static/code-examples/code/mtls/kafka/client.py --\x3e /home/runner/work/docs/static/code-examples/code/mtls/kafka/client.py\n\n"))),(0,r.kt)(o.Z,{value:"bash",label:"Bash",default:!0,mdxType:"TabItem"},"You can use Kafka's builtin kafka-console-consumer.sh script to connect to Kafka. The script requires the credentials to be generated in the JKS format.",(0,r.kt)(l.Z,{mdxType:"Tabs"},(0,r.kt)(o.Z,{value:"bash",label:"Bash",default:!0,mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"\n> include file not found: ../../../../static/code-examples/code/mtls/kafka/client.sh --\x3e /home/runner/work/docs/static/code-examples/code/mtls/kafka/client.sh\n\n"))),(0,r.kt)(o.Z,{value:"client.properties",label:"client.properties",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-properties"},"\n> include file not found: ../../../../static/code-examples/code/mtls/kafka/client.properties --\x3e /home/runner/work/docs/static/code-examples/code/mtls/kafka/client.properties\n\n")))))),(0,r.kt)("h2",{id:"verify-the-generated-mtls-credentials"},"Verify the generated mTLS credentials"),(0,r.kt)("p",null,"We can use ",(0,r.kt)("inlineCode",{parentName:"p"},"openssl")," to inspect the generated certificates that were stored as Kubernetes secrets\nand mounted as volumes into pod containers."),(0,r.kt)("p",null,"To retrieve the credentials directly from the Kubernetes secrets store, fetch them via ",(0,r.kt)("inlineCode",{parentName:"p"},"kubectl get secret"),":"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-shell"},"kubectl get secret -n otterize-tutorial-mtls client-credentials-secret -o jsonpath='{.data.svid\\.pem}' | base64 -d > svid.pem\n")),(0,r.kt)("p",null,"Alternatively, retrieve the credentials from the container's mounted volume, e.g. by executing a shell command:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-shell"},"kubectl exec -n otterize-tutorial-mtls -it deploy/client -- cat /var/otterize/credentials/cert.pem > svid.pem\n")),(0,r.kt)("p",null,"The retrieved credentials can be inspected with:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-shell"},"openssl x509 -in svid.pem -text | head -n 15\n")),(0,r.kt)("p",null,"You should see a similar output to"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-x509"},"Certificate:\n    Data:\n        Version: 3 (0x2)\n        Serial Number:\n            0b:eb:eb:4d:0e:02:7e:28:93:30:1c:55:26:22:8b:c7\n        Signature Algorithm: sha256WithRSAEncryption\n        Issuer: C = US, O = SPIRE\n        Validity\n            Not Before: Aug 24 12:19:57 2022 GMT\n            Not After : Sep 23 12:20:07 2022 GMT\n        # highlight-next-line\n        Subject: C = US, O = SPIRE, CN = client.otterize-tutorial-mtls       # the client's name\n        Subject Public Key Info:\n            Public Key Algorithm: id-ecPublicKey\n                Public-Key: (256 bit)\n                pub:\n")),(0,r.kt)("p",null,'You can see that Otterize generated an X.509 keypair using the pod\'s name ("client")\nand namespace ("otterize-tutorial-mtls"): ',(0,r.kt)("inlineCode",{parentName:"p"},"client.otterize-tutorial-mtls"),".\nThe certificate belongs to a chain of trust rooted at the SPIRE server."),(0,r.kt)("h2",{id:"whats-next"},"What's next"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Configure secure access between pods and Kafka running within the same Kubernetes cluster with this ",(0,r.kt)("a",{parentName:"li",href:"/quick-tutorials/k8s-kafka-mtls"},"guide"),"."),(0,r.kt)("li",{parentName:"ul"},"Read more about the ",(0,r.kt)("a",{parentName:"li",href:"/reference/configuration/credentials-operator/"},"Otterize Credentials operator"))))}m.isMDXComponent=!0}}]);