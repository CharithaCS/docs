"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[372],{3905:(e,t,n)=>{n.d(t,{Zo:()=>u,kt:()=>m});var r=n(7294);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function a(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,r,i=function(e,t){if(null==e)return{};var n,r,i={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(i[n]=e[n]);return i}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(i[n]=e[n])}return i}var s=r.createContext({}),c=function(e){var t=r.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):a(a({},t),e)),n},u=function(e){var t=c(e.components);return r.createElement(s.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},d=r.forwardRef((function(e,t){var n=e.components,i=e.mdxType,o=e.originalType,s=e.parentName,u=l(e,["components","mdxType","originalType","parentName"]),d=c(n),m=i,g=d["".concat(s,".").concat(m)]||d[m]||p[m]||o;return n?r.createElement(g,a(a({ref:t},u),{},{components:n})):r.createElement(g,a({ref:t},u))}));function m(e,t){var n=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var o=n.length,a=new Array(o);a[0]=d;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l.mdxType="string"==typeof e?e:i,a[1]=l;for(var c=2;c<o;c++)a[c]=n[c];return r.createElement.apply(null,a)}return r.createElement.apply(null,n)}d.displayName="MDXCreateElement"},5285:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>a,default:()=>p,frontMatter:()=>o,metadata:()=>l,toc:()=>c});var r=n(7462),i=(n(7294),n(3905));const o={sidebar_position:1,title:"Installing Otterize in Kubernetes"},a=void 0,l={unversionedId:"documentation/guides/k8s-installation",id:"documentation/guides/k8s-installation",title:"Installing Otterize in Kubernetes",description:"Install Otterize on a Kubernetes cluster using helm.",source:"@site/docs/documentation/3-guides/1-k8s-installation.md",sourceDirName:"documentation/3-guides",slug:"/documentation/guides/k8s-installation",permalink:"/documentation/guides/k8s-installation",draft:!1,editUrl:"https://github.com/otterize/docs/edit/main/docs/documentation/3-guides/1-k8s-installation.md",tags:[],version:"current",sidebarPosition:1,frontMatter:{sidebar_position:1,title:"Installing Otterize in Kubernetes"},sidebar:"docSidebar",previous:{title:"Guides",permalink:"/documentation/guides/"},next:{title:"Mapping pod-to-pod calls in Kubernetes",permalink:"/documentation/guides/k8s-mapping-pod-to-pod-calls"}},s={},c=[{value:"Install Otterize",id:"install-otterize",level:2},{value:"Verify network policies are enforceable",id:"verify-network-policies-are-enforceable",level:2},{value:"Uninstall Otterize",id:"uninstall-otterize",level:2},{value:"Getting Started",id:"getting-started",level:2},{value:"Advanced configuration",id:"advanced-configuration",level:2}],u={toc:c};function p(e){let{components:t,...n}=e;return(0,i.kt)("wrapper",(0,r.Z)({},u,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("p",null,"Install Otterize on a Kubernetes cluster using helm."),(0,i.kt)("h2",{id:"install-otterize"},"Install Otterize"),(0,i.kt)("admonition",{type:"note"},(0,i.kt)("p",{parentName:"admonition"},"You can skip this section if Otterize is already installed in your cluster.")),(0,i.kt)("ol",null,(0,i.kt)("li",{parentName:"ol"},"Use Helm to install the latest version of Otterize:",(0,i.kt)("pre",{parentName:"li"},(0,i.kt)("code",{parentName:"pre",className:"language-shell"},"helm repo add otterize https://otterize.github.io/helm-charts\nhelm repo update\nhelm upgrade --install otterize otterize/otterize-kubernetes -n otterize --create-namespace\n"))),(0,i.kt)("li",{parentName:"ol"},"It can take several minutes for the pods to be ",(0,i.kt)("inlineCode",{parentName:"li"},"Running")," and all containers to be ready.\nYou can monitor progress with the following command:",(0,i.kt)("pre",{parentName:"li"},(0,i.kt)("code",{parentName:"pre"},"kubectl get pods -n otterize -w\n")),"Once you see the following (there may be even more pods), you can stop monitoring with ",(0,i.kt)("inlineCode",{parentName:"li"},"Ctrl-C"),":",(0,i.kt)("pre",{parentName:"li"},(0,i.kt)("code",{parentName:"pre",className:"language-bash"},"NAME                                                             READY   STATUS    RESTARTS      AGE\nintents-operator-controller-manager-6b97596d54-5qxcw             2/2     Running   0             53s\notterize-spire-agent-9s8w7                                       1/1     Running   0             54s\notterize-spire-agent-np2wf                                       1/1     Running   1             54s\notterize-spire-server-0                                          1/1     Running   0             53s\notterize-watcher-77db87cfcd-xhsrk                                1/1     Running   0             53s\nspire-integration-operator-controller-manager-65b8bf57b5-mpltl   2/2     Running   0             53s\n")))),(0,i.kt)("h2",{id:"verify-network-policies-are-enforceable"},"Verify network policies are enforceable"),(0,i.kt)("p",null,"To enforce network policies, a Kubernetes cluster requires a CNI supporting network policies to be\ninstalled."),(0,i.kt)("admonition",{type:"note"},(0,i.kt)("p",{parentName:"admonition"},"You can skip this section if you already have a CNI (such as Calico) installed in your cluster.")),(0,i.kt)("p",null,"If you don't have a CNI installed, a popular choice is Calico by Tigera.\nTo install it, please follow the ",(0,i.kt)("a",{parentName:"p",href:"https://projectcalico.docs.tigera.io/getting-started/kubernetes/helm"},"instructions"),"\nand return to this tutorial."),(0,i.kt)("h2",{id:"uninstall-otterize"},"Uninstall Otterize"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash"},"helm uninstall -n otterize otterize\nhelm repo remove otterize\n")),(0,i.kt)("h2",{id:"getting-started"},"Getting Started"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"./kicking-the-tires"},"Kick the tires"))),(0,i.kt)("h2",{id:"advanced-configuration"},"Advanced configuration"))}p.isMDXComponent=!0}}]);