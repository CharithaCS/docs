"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[968],{5162:(e,t,n)=>{n.d(t,{Z:()=>i});var a=n(7294),o=n(6010);const l="tabItem_Ymn6";function i(e){let{children:t,hidden:n,className:i}=e;return a.createElement("div",{role:"tabpanel",className:(0,o.Z)(l,i),hidden:n},t)}},5488:(e,t,n)=>{n.d(t,{Z:()=>h});var a=n(7462),o=n(7294),l=n(6010),i=n(2389),r=n(7392),s=n(7094),c=n(2466);const u="tabList__CuJ",p="tabItem_LNqP";function d(e){var t,n;const{lazy:i,block:d,defaultValue:h,values:m,groupId:k,className:g}=e,b=o.Children.map(e.children,(e=>{if((0,o.isValidElement)(e)&&"value"in e.props)return e;throw new Error("Docusaurus error: Bad <Tabs> child <"+("string"==typeof e.type?e.type:e.type.name)+'>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.')})),w=null!=m?m:b.map((e=>{let{props:{value:t,label:n,attributes:a}}=e;return{value:t,label:n,attributes:a}})),f=(0,r.l)(w,((e,t)=>e.value===t.value));if(f.length>0)throw new Error('Docusaurus error: Duplicate values "'+f.map((e=>e.value)).join(", ")+'" found in <Tabs>. Every value needs to be unique.');const v=null===h?h:null!=(t=null!=h?h:null==(n=b.find((e=>e.props.default)))?void 0:n.props.value)?t:b[0].props.value;if(null!==v&&!w.some((e=>e.value===v)))throw new Error('Docusaurus error: The <Tabs> has a defaultValue "'+v+'" but none of its children has the corresponding value. Available values are: '+w.map((e=>e.value)).join(", ")+". If you intend to show no default tab, use defaultValue={null} instead.");const{tabGroupChoices:y,setTabGroupChoices:N}=(0,s.U)(),[T,z]=(0,o.useState)(v),C=[],{blockElementScrollPositionUntilNextRender:S}=(0,c.o5)();if(null!=k){const e=y[k];null!=e&&e!==T&&w.some((t=>t.value===e))&&z(e)}const I=e=>{const t=e.currentTarget,n=C.indexOf(t),a=w[n].value;a!==T&&(S(t),z(a),null!=k&&N(k,String(a)))},x=e=>{var t;let n=null;switch(e.key){case"ArrowRight":{var a;const t=C.indexOf(e.currentTarget)+1;n=null!=(a=C[t])?a:C[0];break}case"ArrowLeft":{var o;const t=C.indexOf(e.currentTarget)-1;n=null!=(o=C[t])?o:C[C.length-1];break}}null==(t=n)||t.focus()};return o.createElement("div",{className:(0,l.Z)("tabs-container",u)},o.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,l.Z)("tabs",{"tabs--block":d},g)},w.map((e=>{let{value:t,label:n,attributes:i}=e;return o.createElement("li",(0,a.Z)({role:"tab",tabIndex:T===t?0:-1,"aria-selected":T===t,key:t,ref:e=>C.push(e),onKeyDown:x,onFocus:I,onClick:I},i,{className:(0,l.Z)("tabs__item",p,null==i?void 0:i.className,{"tabs__item--active":T===t})}),null!=n?n:t)}))),i?(0,o.cloneElement)(b.filter((e=>e.props.value===T))[0],{className:"margin-top--md"}):o.createElement("div",{className:"margin-top--md"},b.map(((e,t)=>(0,o.cloneElement)(e,{key:t,hidden:e.props.value!==T})))))}function h(e){const t=(0,i.Z)();return o.createElement(d,(0,a.Z)({key:String(t)},e))}},3270:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>u,contentTitle:()=>s,default:()=>h,frontMatter:()=>r,metadata:()=>c,toc:()=>p});var a=n(7462),o=(n(7294),n(3905)),l=(n(814),n(5488)),i=n(5162);const r={sidebar_position:1,title:"Visual tutorial: Kubernetes cluster mapping",sidebar_label:"Kubernetes cluster mapping"},s=void 0,c={unversionedId:"quick-visual-tutorials/visual-k8s-cluster-mapping",id:"quick-visual-tutorials/visual-k8s-cluster-mapping",title:"Visual tutorial: Kubernetes cluster mapping",description:"To support intent-based access control (IBAC), Otterize OSS starts by providing a network map of a Kubernetes cluster, using the Otterize network mapper running in the cluster.",source:"@site/docs/quick-visual-tutorials/visual-k8s-cluster-mapping.mdx",sourceDirName:"quick-visual-tutorials",slug:"/quick-visual-tutorials/visual-k8s-cluster-mapping",permalink:"/quick-visual-tutorials/visual-k8s-cluster-mapping",draft:!1,editUrl:"https://github.com/otterize/docs/edit/main/docs/quick-visual-tutorials/visual-k8s-cluster-mapping.mdx",tags:[],version:"current",sidebarPosition:1,frontMatter:{sidebar_position:1,title:"Visual tutorial: Kubernetes cluster mapping",sidebar_label:"Kubernetes cluster mapping"},sidebar:"docSidebar",previous:{title:"Simple mTLS deployment",permalink:"/quick-tutorials/k8s-mtls"},next:{title:"IBAC with network policies",permalink:"/quick-visual-tutorials/visual-ibac-network-policies"}},u={},p=[{value:"Prerequisites",id:"prerequisites",level:2},{value:"Deploy the demo set of services",id:"deploy-the-demo-set-of-services",level:2},{value:"Create an Otterize Cloud account",id:"create-an-otterize-cloud-account",level:2},{value:"Install Otterize OSS",id:"install-otterize-oss",level:2},{value:"Visualize the cluster via the access graph",id:"visualize-the-cluster-via-the-access-graph",level:2},{value:"The network map of the cluster",id:"the-network-map-of-the-cluster",level:3},{value:"Understanding access and building confidence",id:"understanding-access-and-building-confidence",level:3},{value:"Protection status",id:"protection-status",level:4},{value:"Blocking status",id:"blocking-status",level:4},{value:"What&#39;s next",id:"whats-next",level:2},{value:"Teardown",id:"teardown",level:2}],d={toc:p};function h(e){let{components:t,...r}=e;return(0,o.kt)("wrapper",(0,a.Z)({},d,r,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("p",null,"To support intent-based access control (IBAC), Otterize OSS starts by providing a network map of a Kubernetes cluster, using the Otterize network mapper running in the cluster.\nOtterize Cloud then optionally extends this capability with an enhanced visual access graph based on the same information."),(0,o.kt)("p",null,"When the Otterize OSS intents operator is deployed in the cluster, and connected the Otterize Cloud, the access graph is enriched with access control information, and helps guide the rollout of IBAC in the cluster."),(0,o.kt)("p",null,"In this tutorial, we will:"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"Deploy a demo set of services based on the ",(0,o.kt)("a",{parentName:"li",href:"https://github.com/GoogleCloudPlatform/microservices-demo"},"Google microservices demo"),",\n(a simple e-commerce application) into a Kubernetes cluster."),(0,o.kt)("li",{parentName:"ul"},"Create an Otterize Cloud account, and install Otterize OSS (including its network mapper) in the cluster, connected to your Cloud account."),(0,o.kt)("li",{parentName:"ul"},"Visualize the cluster network map in Otterize Cloud.")),(0,o.kt)("h2",{id:"prerequisites"},"Prerequisites"),(0,o.kt)("details",null,(0,o.kt)("summary",null,"Prepare a cluster"),(0,o.kt)("p",null,"Before you start, you'll need a Kubernetes cluster."),(0,o.kt)("p",null,"While you won't need ",(0,o.kt)("a",{parentName:"p",href:"https://kubernetes.io/docs/concepts/services-networking/network-policies/"},"network policies")," in this tutorial,\nyou'll use them in the next tutorial, so you may just want to install them now. Otherwise, feel free to skip that aspect."),(0,o.kt)("p",null,"Below are instructions for setting up a Kubernetes cluster with network policies.\nIf you don't have a cluster already, we recommend starting out with a Minikube cluster."),(0,o.kt)(l.Z,{groupId:"cni",mdxType:"Tabs"},(0,o.kt)(i.Z,{value:"minikube",label:"Minikube",mdxType:"TabItem"},(0,o.kt)("p",null,"If you don't have the Minikube CLI, first ",(0,o.kt)("a",{parentName:"p",href:"https://minikube.sigs.k8s.io/docs/start/"},"install it"),". "),(0,o.kt)("p",null,"Then start your Minikube cluster with Calico, in order to enforce network policies."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"minikube start --cpus=4 --memory 8192 --disk-size 32g --cni=calico\n")),(0,o.kt)("p",null,"The increased CPU, memory and disk resource allocations are required to be able to deploy the ecommerce app used in the visual tutorials successfully.")),(0,o.kt)(i.Z,{value:"gke",label:"Google GKE",mdxType:"TabItem"},(0,o.kt)("a",{href:"https://cloud.google.com/kubernetes-engine/docs/how-to/network-policy#gcloud"},"Visit the official documentation"),", or follow the instructions below:",(0,o.kt)(l.Z,{mdxType:"Tabs"},(0,o.kt)(i.Z,{value:"cli",label:"gcloud CLI",mdxType:"TabItem"},(0,o.kt)("p",null,"To use the gcloud CLI for this tutorial, first ",(0,o.kt)("a",{parentName:"p",href:"https://cloud.google.com/sdk/docs/install"},"install")," and then\n",(0,o.kt)("a",{parentName:"p",href:"https://cloud.google.com/sdk/docs/initializing"},"initialize")," it."),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},(0,o.kt)("em",{parentName:"strong"},"To enable network policy enforcement when creating a new cluster:"))),(0,o.kt)("p",null,"Run the following command:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"gcloud container clusters create CLUSTER_NAME --enable-network-policy --zone=ZONE\n")),(0,o.kt)("p",null,"(Replace ",(0,o.kt)("inlineCode",{parentName:"p"},"CLUSTER_NAME")," with the name of the new cluster and ",(0,o.kt)("inlineCode",{parentName:"p"},"ZONE")," with your zone.)"),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},(0,o.kt)("em",{parentName:"strong"},"To enable network policy enforcement for an existing cluster, perform the following tasks:"))),(0,o.kt)("p",null,"Run the following command to enable the add-on:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"gcloud container clusters update CLUSTER_NAME --update-addons=NetworkPolicy=ENABLED\n")),(0,o.kt)("p",null,"(Replace ",(0,o.kt)("inlineCode",{parentName:"p"},"CLUSTER_NAME")," with the name of the cluster.)"),(0,o.kt)("p",null,"Then enable network policy enforcement on your cluster, re-creating your cluster's node pools with network policy enforcement enabled:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"gcloud container clusters update CLUSTER_NAME --enable-network-policy\n")),(0,o.kt)("p",null,"(Replace ",(0,o.kt)("inlineCode",{parentName:"p"},"CLUSTER_NAME")," with the name of the cluster.)")),(0,o.kt)(i.Z,{value:"console",label:"Console",mdxType:"TabItem"},(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},(0,o.kt)("em",{parentName:"strong"},"To enable network policy enforcement when creating a new cluster:"))),(0,o.kt)("ol",null,(0,o.kt)("li",{parentName:"ol"},(0,o.kt)("p",{parentName:"li"},"Go to the Google Kubernetes Engine page in the Google Cloud console.\nThe remaining steps will appear automatically in the Google Cloud console.")),(0,o.kt)("li",{parentName:"ol"},(0,o.kt)("p",{parentName:"li"},"On the Google Kubernetes Engine page, click Create.")),(0,o.kt)("li",{parentName:"ol"},(0,o.kt)("p",{parentName:"li"},"Configure your cluster as desired.")),(0,o.kt)("li",{parentName:"ol"},(0,o.kt)("p",{parentName:"li"},"From the navigation pane, under Cluster, click Networking.")),(0,o.kt)("li",{parentName:"ol"},(0,o.kt)("p",{parentName:"li"},"Select the checkbox to Enable network policy.")),(0,o.kt)("li",{parentName:"ol"},(0,o.kt)("p",{parentName:"li"},"Click Create."))),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},(0,o.kt)("em",{parentName:"strong"},"To enable network policy enforcement for an existing cluster:"))),(0,o.kt)("ol",null,(0,o.kt)("li",{parentName:"ol"},(0,o.kt)("p",{parentName:"li"},"Go to the Google Kubernetes Engine page in the Google Cloud console. The remaining steps will appear automatically in the Google Cloud console.")),(0,o.kt)("li",{parentName:"ol"},(0,o.kt)("p",{parentName:"li"},"In the cluster list, click the name of the cluster you want to modify.")),(0,o.kt)("li",{parentName:"ol"},(0,o.kt)("p",{parentName:"li"},"Under Networking, in the Network policy field, click Edit network policy.")),(0,o.kt)("li",{parentName:"ol"},(0,o.kt)("p",{parentName:"li"},"Select the checkbox to Enable network policy for master and click Save Changes.")),(0,o.kt)("li",{parentName:"ol"},(0,o.kt)("p",{parentName:"li"},"Wait for your changes to apply, and then click Edit network policy again.")),(0,o.kt)("li",{parentName:"ol"},(0,o.kt)("p",{parentName:"li"},"Select the checkbox to Enable network policy for nodes.")),(0,o.kt)("li",{parentName:"ol"},(0,o.kt)("p",{parentName:"li"},"Click Save Changes.")))))),(0,o.kt)(i.Z,{value:"eks",label:"AWS EKS",mdxType:"TabItem"},(0,o.kt)("a",{href:"https://docs.aws.amazon.com/eks/latest/userguide/calico.html"},"Visit the official documentation"),", or follow the instructions below:",(0,o.kt)("ol",null,(0,o.kt)("li",{parentName:"ol"},"Spin up an ",(0,o.kt)("a",{parentName:"li",href:"https://docs.aws.amazon.com/eks/latest/userguide/create-cluster.html"},"EKS cluster")," using the console, AWS CLI or ",(0,o.kt)("inlineCode",{parentName:"li"},"eksctl"),"."),(0,o.kt)("li",{parentName:"ol"},"Install Calico for network policy enforcement, without replacing the CNI:")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"kubectl apply -f https://raw.githubusercontent.com/aws/amazon-vpc-cni-k8s/v1.12.6/config/master/calico-operator.yaml\nkubectl apply -f https://raw.githubusercontent.com/aws/amazon-vpc-cni-k8s/v1.12.6/config/master/calico-crs.yaml\n"))),(0,o.kt)(i.Z,{value:"aks",label:"Azure AKS",mdxType:"TabItem"},(0,o.kt)("p",null,"You can set up an AKS cluster using this ",(0,o.kt)("a",{parentName:"p",href:"https://learn.microsoft.com/en-us/azure/aks/learn/quick-kubernetes-deploy-cli"},"guide"),"."),(0,o.kt)("p",null,"For network policy support, no setup is required: Azure AKS comes with a built-in network policy implementation called Azure Network Policy Manager. You can choose whether you'd like to use this option or Calico when you create a cluster."),(0,o.kt)("a",{href:"https://learn.microsoft.com/en-us/azure/aks/use-network-policies"}," Read more at the official documentation site"),"."))),(0,o.kt)("h2",{id:"deploy-the-demo-set-of-services"},"Deploy the demo set of services"),(0,o.kt)("p",null,"To deploy these into your cluster:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"kubectl create namespace otterize-ecom-demo\nkubectl apply -n otterize-ecom-demo -f https://docs.otterize.com/code-examples/shadow-mode/ecom-demo.yaml\n")),(0,o.kt)("details",null,(0,o.kt)("summary",null,"Optional: check that the demo was deployed..."),(0,o.kt)("div",null,(0,o.kt)("p",null,"To see all the pods in the demo:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"kubectl get pods -n otterize-ecom-demo\n")),(0,o.kt)("p",null,"The pods should all be ready and running:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"NAME                                     READY   STATUS    RESTARTS      AGE\nadservice-65494cbb9d-5lrv6               1/1     Running   0             115s\ncartservice-6d84fc45bb-hdtwn             1/1     Running   0             115s\ncheckoutservice-5599486df-dvj9n          1/1     Running   3 (79s ago)   115s\ncurrencyservice-6d64686d74-lxb7x         1/1     Running   0             115s\nemailservice-7c6cbfbbd7-xjxlt            1/1     Running   0             115s\nfrontend-f9448d7d4-6dmnr                 1/1     Running   0             115s\nkafka-0                                  1/1     Running   2 (83s ago)   115s\nloadgenerator-7f6987f59-bchgm            1/1     Running   0             114s\norderservice-7ffdbf6df-wzzfd             1/1     Running   0             115s\notterize-ecom-demo-zookeeper-0           1/1     Running   0             115s\npaymentservice-86855d78db-zjjfn          1/1     Running   0             115s\nproductcatalogservice-5944c7f666-2rjc6   1/1     Running   0             115s\nrecommendationservice-6c8d848498-zm2rm   1/1     Running   0             114s\nredis-cart-6b79c5b497-xpms2              1/1     Running   0             115s\nshippingservice-85694cb9bd-v54xp         1/1     Running   0             114s\n")))),(0,o.kt)("details",null,(0,o.kt)("summary",null,"Optional: Browse the demo"),(0,o.kt)(l.Z,{groupId:"frontend-addr",mdxType:"Tabs"},(0,o.kt)(i.Z,{value:"k8s",label:"K8s",mdxType:"TabItem"},(0,o.kt)("p",null,"To get the externally-accessible URL where your demo front end is available, run:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"kubectl get service -n otterize-ecom-demo frontend-external | awk '{print $4}'\n")),(0,o.kt)("p",null,"The result should be similar to (if running on AWS EKS):"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"a11843075fd254f8099a986467098647-1889474685.us-east-1.elb.amazonaws.com\n")),(0,o.kt)("p",null,'Go ahead and browse to the URL above to "shop" and get a feel for the demo\'s behavior.\n(The URL might take some time to populate across DNS servers. Note that we are accessing an HTTP and not an HTTPS website.)')),(0,o.kt)(i.Z,{value:"minikube",label:"Minikube",mdxType:"TabItem"},(0,o.kt)("p",null,"To get the externally-accessible URL where your demo front end is available, run:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"kubectl port-forward -n otterize-ecom-demo service/frontend-external 8080:80 &\n")),(0,o.kt)("p",null,"The demo is now accessible at:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"http://localhost:8080\n")),(0,o.kt)("p",null,'Go ahead and browse to the URL above to "shop" and get a feel for the demo\'s behavior.')))),(0,o.kt)("h2",{id:"create-an-otterize-cloud-account"},"Create an Otterize Cloud account"),(0,o.kt)("p",null,"If you don't already have an account, browse to ",(0,o.kt)("a",{parentName:"p",href:"https://app.otterize.com"},"https://app.otterize.com")," to set one up."),(0,o.kt)("p",null,"If someone in your team has already created an org in Otterize Cloud, and invited you (using your email address), you may see an invitation to accept."),(0,o.kt)("p",null,"Otherwise, you'll create a new org, which you can later rename, and invite your teammates to join you there."),(0,o.kt)("h2",{id:"install-otterize-oss"},"Install Otterize OSS"),(0,o.kt)("p",null,'If no Kubernetes clusters are connected to your account, click the "connect your cluster" button to:'),(0,o.kt)("ol",null,(0,o.kt)("li",{parentName:"ol"},"Create a Cloud cluster object, specifying its name and the name of an environment to which all namespaces in that cluster will belong, by default."),(0,o.kt)("li",{parentName:"ol"},'Connect it with your actual Kubernetes cluster, by clicking on the "Connection guide ',"\u2192",'" link and running the Helm commands shown there.')),(0,o.kt)("details",null,(0,o.kt)("summary",null,"More details, if you're curious"),(0,o.kt)("p",null,"Connecting your cluster simply entails installing Otterize OSS via Helm, using credentials from your account so Otterize OSS can report information needed to visualize the cluster."),(0,o.kt)("p",null,"The credentials will already be inlined into the Helm command shown in the Cloud UI, so you just need to copy that line and run it from your shell.\nIf you don't give it the Cloud credentials, Otterize OSS will run fully standalone in your cluster ","\u2014"," you just won't have the visualization in Otterize Cloud."),(0,o.kt)("p",null,'The Helm command shown in the Cloud UI also includes flags to turn off enforcement: Otterize OSS will be running in "shadow mode," meaning that it will not create network policies to restrict pod-to-pod traffic, or create Kafka ACLs to control access to Kafka topics. Instead, it will report to Otterize Cloud what ',(0,o.kt)("strong",{parentName:"p"},"would")," happen if enforcement were to be enabled, guiding you to implement IBAC without blocking intended access.")),(0,o.kt)("h2",{id:"visualize-the-cluster-via-the-access-graph"},"Visualize the cluster via the access graph"),(0,o.kt)("p",null,"In the Otterize Cloud UI, your ",(0,o.kt)("a",{parentName:"p",href:"https://app.otterize.com/clusters"},"cluster")," should now show all 3 Otterize OSS operators ","\u2014"," the intents operator, network mapper, and credentials operator ","\u2014"," as connected, with a green status."),(0,o.kt)("p",null,"And when you go back to the ",(0,o.kt)("a",{parentName:"p",href:"https://app.otterize.com/access-graph"},"access graph")," (and select your cluster from the dropdown, if needed), you should see the following map for the demo running in your cluster:"),(0,o.kt)("p",null,(0,o.kt)("img",{alt:"Access graph",src:n(714).Z,width:"1467",height:"693"})),(0,o.kt)("p",null,"Each service is shown as a node in the access graph, while the thick lines (edges) connecting the services show access between them, as detected by the network mapper."),(0,o.kt)("h3",{id:"the-network-map-of-the-cluster"},"The network map of the cluster"),(0,o.kt)("p",null,"If only the network mapper were connected to the Cloud, the services would be shown without the lock icons, and the thick connecting lines would be shown in blue, because we would have no more information about what access is or would be blocked once enforcement were turned on."),(0,o.kt)("p",null,'The network mapper gives insights on which services are trying to, or actually are, calling other services, which already provides useful insights. We call these "discovered intents": the intent of the client service to call the server service is discovered by the attempt to call the server service, not by an explicit declaration.'),(0,o.kt)("p",null,(0,o.kt)("img",{alt:"Access graph - network mapper",src:n(6753).Z,width:"1768",height:"806"})),(0,o.kt)("h3",{id:"understanding-access-and-building-confidence"},"Understanding access and building confidence"),(0,o.kt)("p",null,"The network mapper only shows information about discovered intents, not about access that is, or would be, allowed or blocked."),(0,o.kt)("p",null,"Because the intents operator is also connected, we get additional information, namely on access controls ","\u2014"," in this case, only pod-to-pod access, because we have not put in any Kafka-specific access configurations."),(0,o.kt)("h4",{id:"protection-status"},"Protection status"),(0,o.kt)("p",null,'The services all show "unlocked" icons , meaning they are not protected (via network policies): that makes sense, because the intents operator is in shadow mode, so it does not protect (via managing network policies).'),(0,o.kt)("p",null,"We also (as a default) told Otterize Cloud that there is a global default-deny network policy in place, so again, services show as unprotected."),(0,o.kt)("h4",{id:"blocking-status"},"Blocking status"),(0,o.kt)("p",null,"Note that the locks themselves are green, indicating that you could now turn on enforcement without blocking any clients."),(0,o.kt)("p",null,"Similarly, all the thick connecting lines between the services are green: none of these client calls would be blocked if enforcement were turned on. If one were red, that would tell you it would be blocked, as you might have guessed."),(0,o.kt)("p",null,"But why would these clients not be blocked if enforcement were on ","\u2014"," doesn't that mean the services they call would not be protected? Yes, and the access graph lets you know that too."),(0,o.kt)("p",null,"Note the red notifications on the services. Click on a service, e.g. the payment service:"),(0,o.kt)("p",null,(0,o.kt)("img",{alt:"Access graph - clicked service",src:n(5973).Z,width:"655",height:"548"})),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"You can see the service isn't protected now, and it's ready to turn on enforcement without blocking any clients."),(0,o.kt)("li",{parentName:"ul"},"You can also see it won't be protected even after enabling enforcement ","\u2014"," and what you need to do:",(0,o.kt)("ul",{parentName:"li"},(0,o.kt)("li",{parentName:"ul"},"If you explicitly create and apply intents from the clients, they will be guaranteed access, but also the server will be protected from any undeclared access."))),(0,o.kt)("li",{parentName:"ul"},"So why do you need to declare intents to ",(0,o.kt)("em",{parentName:"li"},"protect")," services as well as to ",(0,o.kt)("em",{parentName:"li"},"enable")," clients?",(0,o.kt)("ul",{parentName:"li"},(0,o.kt)("li",{parentName:"ul"},"It's the way network policies work. A service must have at least one network policy applied to it in order to be protected. That can either be a global default-deny network policy, or an Otterize-managed network policy created once a client has declared and applied an intent.")))),(0,o.kt)("p",null,"Which intents are missing? What happens when we apply them? All that will be covered in the next tutorial."),(0,o.kt)("p",null,"In short, the access graph will provide insights about the current access to services, and will guide you to roll out IBAC responsibly and confidently, showing which intents need to be declared to both ensure access and protect servers."),(0,o.kt)("h2",{id:"whats-next"},"What's next"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"Gradually ",(0,o.kt)("a",{parentName:"li",href:"/quick-visual-tutorials/visual-ibac-network-policies"},"roll out IBAC")," in this demo, guided by the access graph, and controlling pod-to-pod access via network policies."),(0,o.kt)("li",{parentName:"ul"},"Learn how to ",(0,o.kt)("a",{parentName:"li",href:"/quick-visual-tutorials/visual-ibac-kafka-k8s"},"manage secure access for Kafka")," in this same demo.")),(0,o.kt)("h2",{id:"teardown"},"Teardown"),(0,o.kt)("p",null,"To remove the deployed demo run:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"kubectl delete -n otterize-ecom-demo -f https://docs.otterize.com/code-examples/shadow-mode/all.yaml\nkubectl delete -n otterize-ecom-demo -f https://docs.otterize.com/code-examples/shadow-mode/ecom-demo.yaml\nkubectl delete namespace otterize-ecom-demo\n")))}h.isMDXComponent=!0},6753:(e,t,n)=>{n.d(t,{Z:()=>a});const a=n.p+"assets/images/network-mapper-only-536138b396d7f778de38bb77c2fa5711.png"},714:(e,t,n)=>{n.d(t,{Z:()=>a});const a=n.p+"assets/images/phase-0-c52baed0812769632151410b5b83d4e6.png"},5973:(e,t,n)=>{n.d(t,{Z:()=>a});const a=n.p+"assets/images/would-not-block-unprotected-79693cea99b20a9cd420091a9b3fd19e.png"}}]);