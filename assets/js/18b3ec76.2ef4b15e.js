"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[136],{3905:(e,t,a)=>{a.d(t,{Zo:()=>u,kt:()=>k});var n=a(7294);function r(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function i(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function l(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?i(Object(a),!0).forEach((function(t){r(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):i(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function s(e,t){if(null==e)return{};var a,n,r=function(e,t){if(null==e)return{};var a,n,r={},i=Object.keys(e);for(n=0;n<i.length;n++)a=i[n],t.indexOf(a)>=0||(r[a]=e[a]);return r}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(n=0;n<i.length;n++)a=i[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(r[a]=e[a])}return r}var o=n.createContext({}),c=function(e){var t=n.useContext(o),a=t;return e&&(a="function"==typeof e?e(t):l(l({},t),e)),a},u=function(e){var t=c(e.components);return n.createElement(o.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},d=n.forwardRef((function(e,t){var a=e.components,r=e.mdxType,i=e.originalType,o=e.parentName,u=s(e,["components","mdxType","originalType","parentName"]),d=c(a),k=r,m=d["".concat(o,".").concat(k)]||d[k]||p[k]||i;return a?n.createElement(m,l(l({ref:t},u),{},{components:a})):n.createElement(m,l({ref:t},u))}));function k(e,t){var a=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var i=a.length,l=new Array(i);l[0]=d;var s={};for(var o in t)hasOwnProperty.call(t,o)&&(s[o]=t[o]);s.originalType=e,s.mdxType="string"==typeof e?e:r,l[1]=s;for(var c=2;c<i;c++)l[c]=a[c];return n.createElement.apply(null,l)}return n.createElement.apply(null,a)}d.displayName="MDXCreateElement"},5162:(e,t,a)=>{a.d(t,{Z:()=>l});var n=a(7294),r=a(6010);const i="tabItem_Ymn6";function l(e){let{children:t,hidden:a,className:l}=e;return n.createElement("div",{role:"tabpanel",className:(0,r.Z)(i,l),hidden:a},t)}},5488:(e,t,a)=>{a.d(t,{Z:()=>k});var n=a(7462),r=a(7294),i=a(6010),l=a(2389),s=a(7392),o=a(7094),c=a(2466);const u="tabList__CuJ",p="tabItem_LNqP";function d(e){var t,a;const{lazy:l,block:d,defaultValue:k,values:m,groupId:f,className:b}=e,v=r.Children.map(e.children,(e=>{if((0,r.isValidElement)(e)&&"value"in e.props)return e;throw new Error("Docusaurus error: Bad <Tabs> child <"+("string"==typeof e.type?e.type:e.type.name)+'>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.')})),g=null!=m?m:v.map((e=>{let{props:{value:t,label:a,attributes:n}}=e;return{value:t,label:a,attributes:n}})),h=(0,s.l)(g,((e,t)=>e.value===t.value));if(h.length>0)throw new Error('Docusaurus error: Duplicate values "'+h.map((e=>e.value)).join(", ")+'" found in <Tabs>. Every value needs to be unique.');const y=null===k?k:null!=(t=null!=k?k:null==(a=v.find((e=>e.props.default)))?void 0:a.props.value)?t:v[0].props.value;if(null!==y&&!g.some((e=>e.value===y)))throw new Error('Docusaurus error: The <Tabs> has a defaultValue "'+y+'" but none of its children has the corresponding value. Available values are: '+g.map((e=>e.value)).join(", ")+". If you intend to show no default tab, use defaultValue={null} instead.");const{tabGroupChoices:N,setTabGroupChoices:S}=(0,o.U)(),[A,E]=(0,r.useState)(y),C=[],{blockElementScrollPositionUntilNextRender:I}=(0,c.o5)();if(null!=f){const e=N[f];null!=e&&e!==A&&g.some((t=>t.value===e))&&E(e)}const w=e=>{const t=e.currentTarget,a=C.indexOf(t),n=g[a].value;n!==A&&(I(t),E(n),null!=f&&S(f,String(n)))},j=e=>{var t;let a=null;switch(e.key){case"ArrowRight":{var n;const t=C.indexOf(e.currentTarget)+1;a=null!=(n=C[t])?n:C[0];break}case"ArrowLeft":{var r;const t=C.indexOf(e.currentTarget)-1;a=null!=(r=C[t])?r:C[C.length-1];break}}null==(t=a)||t.focus()};return r.createElement("div",{className:(0,i.Z)("tabs-container",u)},r.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,i.Z)("tabs",{"tabs--block":d},b)},g.map((e=>{let{value:t,label:a,attributes:l}=e;return r.createElement("li",(0,n.Z)({role:"tab",tabIndex:A===t?0:-1,"aria-selected":A===t,key:t,ref:e=>C.push(e),onKeyDown:j,onFocus:w,onClick:w},l,{className:(0,i.Z)("tabs__item",p,null==l?void 0:l.className,{"tabs__item--active":A===t})}),null!=a?a:t)}))),l?(0,r.cloneElement)(v.filter((e=>e.props.value===A))[0],{className:"margin-top--md"}):r.createElement("div",{className:"margin-top--md"},v.map(((e,t)=>(0,r.cloneElement)(e,{key:t,hidden:e.props.value!==A})))))}function k(e){const t=(0,l.Z)();return r.createElement(d,(0,n.Z)({key:String(t)},e))}},9810:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>o,contentTitle:()=>l,default:()=>p,frontMatter:()=>i,metadata:()=>s,toc:()=>c});var n=a(7462),r=(a(7294),a(3905));a(5488),a(5162);const i={sidebar_position:4,title:"IBAC for Kafka"},l=void 0,s={unversionedId:"documentation/guides/ibac-for-kafka",id:"documentation/guides/ibac-for-kafka",title:"IBAC for Kafka",description:"Recap: controlling access to Kafka (incl. mTLS or tokens, users and ACLs, different ports)",source:"@site/docs/documentation/3-guides/4-ibac-for-kafka.md",sourceDirName:"documentation/3-guides",slug:"/documentation/guides/ibac-for-kafka",permalink:"/documentation/guides/ibac-for-kafka",draft:!1,editUrl:"https://github.com/otterize/docs/edit/main/docs/documentation/3-guides/4-ibac-for-kafka.md",tags:[],version:"current",sidebarPosition:4,frontMatter:{sidebar_position:4,title:"IBAC for Kafka"},sidebar:"docSidebar",previous:{title:"IBAC via network policies",permalink:"/documentation/guides/ibac-via-network-policies"},next:{title:"Terminology",permalink:"/documentation/concepts/terminology"}},o={},c=[{value:"Recap: controlling access to Kafka (incl. mTLS or tokens, users and ACLs, different ports)",id:"recap-controlling-access-to-kafka-incl-mtls-or-tokens-users-and-acls-different-ports",level:2},{value:"Setting security scope via\u2026",id:"setting-security-scope-via",level:2},{value:"\u2026",id:"",level:2},{value:"Practical notes",id:"practical-notes",level:2},{value:"Credentials",id:"credentials",level:3},{value:"Inspecting Kafka credentials - Keystore",id:"inspecting-kafka-credentials---keystore",level:3},{value:"Inspecting Kafka credentials - Truststore",id:"inspecting-kafka-credentials---truststore",level:3},{value:"Inspecting client credentials",id:"inspecting-client-credentials",level:3},{value:"Validating client credentials",id:"validating-client-credentials",level:3},{value:"Avoiding drift",id:"avoiding-drift",level:2},{value:"Granularities of access <em>(incl. via network policies, via authN-only, &amp; topic-level)</em>",id:"granularities-of-access-incl-via-network-policies-via-authn-only--topic-level",level:2}],u={toc:c};function p(e){let{components:t,...a}=e;return(0,r.kt)("wrapper",(0,n.Z)({},u,a,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h2",{id:"recap-controlling-access-to-kafka-incl-mtls-or-tokens-users-and-acls-different-ports"},"Recap: controlling access to Kafka (incl. mTLS or tokens, users and ACLs, different ports)"),(0,r.kt)("h2",{id:"setting-security-scope-via"},"Setting security scope via\u2026"),(0,r.kt)("h2",{id:""},"\u2026"),(0,r.kt)("h2",{id:"practical-notes"},"Practical notes"),(0,r.kt)("h3",{id:"credentials"},"Credentials"),(0,r.kt)("p",null,"Kafka expects credentials to be stored in teh Java Keystore format."),(0,r.kt)("h3",{id:"inspecting-kafka-credentials---keystore"},"Inspecting Kafka credentials - Keystore"),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},"Retrieve the Keystore with",(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"kubectl get secret -n kafka kafka-tls-secret -o jsonpath='{.data.kafka-keystore\\.jks}' | base64 -d > kafka-keystore.jks\n"))),(0,r.kt)("li",{parentName:"ol"},"Extract the certificate from the store",(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"keytool -storepass password -keystore kafka-keystore.jks -alias pkey -exportcert -rfc > server.pem\n"))),(0,r.kt)("li",{parentName:"ol"},"Inspect it with",(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"openssl x509 -in server.pem -text\n")),"You should see",(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre"},"Certificate:\n    Data:\n        Version: 3 (0x2)\n        Serial Number:\n            06:3c:6b:b9:39:33:74:44:2d:e6:66:72:4b:0c:a0:f4\n        Signature Algorithm: sha256WithRSAEncryption\n        Issuer: C = US, O = SPIRE\n        Validity\n            Not Before: Sep  9 21:50:24 2022 GMT\n            Not After : Sep  9 21:53:34 2022 GMT\n        Subject: C = US, O = SPIRE, CN = kafka.kafka\n        Subject Public Key Info:\n            Public Key Algorithm: id-ecPublicKey\n                Public-Key: (256 bit)\n                pub:\n                    04:3c:07:ed:ab:17:bd:ab:bb:c1:7c:17:b3:01:59:\n                    c7:b8:98:f3:61:d8:22:ff:d0:c5:ee:ec:43:54:fe:\n                    de:7b:ab:cf:a9:7b:1f:20:6b:94:7c:fe:e4:65:22:\n                    ee:75:0f:25:60:46:29:2b:38:16:51:b2:1f:c6:c8:\n                    d4:02:b9:bd:2f\n                ASN1 OID: prime256v1\n                NIST CURVE: P-256\n        X509v3 extensions:\n            X509v3 Key Usage: critical\n                Digital Signature, Key Encipherment, Key Agreement\n            X509v3 Extended Key Usage:\n                TLS Web Server Authentication, TLS Web Client Authentication\n            X509v3 Basic Constraints: critical\n                CA:FALSE\n            X509v3 Subject Key Identifier:\n                94:D4:B4:4C:AF:67:12:EA:16:CD:F5:B5:8D:A3:52:F6:F4:61:91:42\n            X509v3 Authority Key Identifier:\n                keyid:F7:3A:41:13:54:66:73:65:C5:29:42:5E:B8:C2:AA:79:8E:29:16:12\n\n            X509v3 Subject Alternative Name:\n                DNS:kafka.kafka, DNS:kafka-0.kafka-headless.kafka.svc.cluster.local, DNS:kafka.kafka.svc.cluster.local, URI:spiffe://example.org/otterize/namespace/kafka/service/kafka \n... truncated\n")))),(0,r.kt)("h3",{id:"inspecting-kafka-credentials---truststore"},"Inspecting Kafka credentials - Truststore"),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},"Retrieve the Truststore with",(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"kubectl get secret -n kafka kafka-tls-secret -o jsonpath='{.data.kafka\\.truststore\\.jks}' | base64 -d > kafka.truststore.jks\n"))),(0,r.kt)("li",{parentName:"ol"},"Extract the certificate from the store",(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"keytool -storepass password -keystore kafka.truststore.jks -alias ca-0 -exportcert -rfc > bundle.pem\n"))),(0,r.kt)("li",{parentName:"ol"},"Inspect it with",(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"openssl x509 -in bundle.pem -text\n")),"You should see",(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre"},"Certificate:\nData:\n    Version: 3 (0x2)\n    Serial Number: 0 (0x0)\n    Signature Algorithm: sha256WithRSAEncryption\n    Issuer: C = US, O = SPIRE\n    Validity\n        Not Before: Sep  6 09:59:21 2022 GMT\n        Not After : Sep  5 09:59:31 2025 GMT\n    Subject: C = US, O = SPIRE\n    Subject Public Key Info:\n        Public Key Algorithm: rsaEncryption\n            RSA Public-Key: (2048 bit)\n            Modulus:\n                ... # truncated\n                24:0d\n            Exponent: 65537 (0x10001)\n    X509v3 extensions:\n        X509v3 Key Usage: critical\n            Digital Signature, Certificate Sign, CRL Sign\n        X509v3 Basic Constraints: critical\n            CA:TRUE\n        X509v3 Subject Key Identifier:\n            F7:3A:41:13:54:66:73:65:C5:29:42:5E:B8:C2:AA:79:8E:29:16:12\n        X509v3 Subject Alternative Name:\n            URI:spiffe://example.org\n... # truncated\n")))),(0,r.kt)("h3",{id:"inspecting-client-credentials"},"Inspecting client credentials"),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"Retrieve the client credentials with"),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"kubectl get secret -n otterize-tutorial-kafka-mtls client-credentials-secret -o jsonpath='{.data.svid\\.pem}' | base64 -d > svid.pem\n"))),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"Inspect with"),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"openssl x509 -in svid.pem -text\n")),(0,r.kt)("p",{parentName:"li"},"You should see"),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre"},"Certificate:\nData:\n    Version: 3 (0x2)\n    Serial Number:\n        e3:81:42:74:5e:c4:d8:d9:cd:97:16:72:23:2e:90:62\n    Signature Algorithm: sha256WithRSAEncryption\n    Issuer: C = US, O = SPIRE\n    Validity\n        Not Before: Sep  9 21:06:52 2022 GMT\n        Not After : Sep 10 21:07:02 2022 GMT\n    Subject: C = US, O = SPIRE, CN = client.otterize-tutorial-kafka-mtls\n    Subject Public Key Info:\n        Public Key Algorithm: id-ecPublicKey\n            Public-Key: (256 bit)\n            pub:\n                04:51:24:70:04:41:c5:46:79:8d:59:7c:21:28:13:\n                18:47:30:e9:cb:41:ed:d4:8b:65:1d:2e:21:9e:2e:\n                97:c9:17:41:b5:a7:e2:df:c7:40:70:60:09:7a:00:\n                33:08:2f:4d:ee:cc:71:79:eb:94:0d:de:f7:46:54:\n                69:38:42:33:24\n            ASN1 OID: prime256v1\n            NIST CURVE: P-256\n    X509v3 extensions:\n        X509v3 Key Usage: critical\n            Digital Signature, Key Encipherment, Key Agreement\n        X509v3 Extended Key Usage:\n            TLS Web Server Authentication, TLS Web Client Authentication\n        X509v3 Basic Constraints: critical\n            CA:FALSE\n        X509v3 Subject Key Identifier:\n            D8:72:F4:58:84:D8:FE:7D:90:EB:1C:7A:70:D0:87:D8:EB:BB:6E:35\n        X509v3 Authority Key Identifier:\n            keyid:F7:3A:41:13:54:66:73:65:C5:29:42:5E:B8:C2:AA:79:8E:29:16:12\n\n        X509v3 Subject Alternative Name:\n            DNS:client.otterize-tutorial-kafka-mtls, URI:spiffe://example.org/otterize/namespace/otterize-tutorial-kafka-mtls/service/client \n... truncated\n")))),(0,r.kt)("h3",{id:"validating-client-credentials"},"Validating client credentials"),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},"Retrieve the client credentials with",(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"kubectl get secret -n otterize-tutorial-kafka-mtls client-credentials-secret -o jsonpath='{.data.svid\\.pem}' | base64 -d > svid.pem\nkubectl get secret -n otterize-tutorial-kafka-mtls client-credentials-secret -o jsonpath='{.data.key\\.pem}' | base64 -d > key.pem\nkubectl get secret -n otterize-tutorial-kafka-mtls client-credentials-secret -o jsonpath='{.data.bundle\\.pem}' | base64 -d > bundle.pem\n"))),(0,r.kt)("li",{parentName:"ol"},"Validate that the key belongs to the certificate be comparing their public keys",(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"openssl pkey -pubout -in key.pem  | openssl md5\n")),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"openssl x509 -noout -pubkey -in svid.pem | openssl md5\n")),"If their public keys match you should see the same results for both executions, in the following format",(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"(stdin)= e01e28be4e3e11a70cdebe327e1aabc9\n"))),(0,r.kt)("li",{parentName:"ol"},"Verify that the certificates belongs to the bundle with",(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"openssl verify -CAfile bundle.pem svid.pem\n")),"You should see",(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"svid.pem: OK\n")))),(0,r.kt)("h2",{id:"avoiding-drift"},"Avoiding drift"),(0,r.kt)("h2",{id:"granularities-of-access-incl-via-network-policies-via-authn-only--topic-level"},"Granularities of access ",(0,r.kt)("em",{parentName:"h2"},"(incl. via network policies, via authN-only, & topic-level)")))}p.isMDXComponent=!0}}]);