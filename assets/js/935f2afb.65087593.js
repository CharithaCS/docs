"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[53],{1109:e=>{e.exports=JSON.parse('{"pluginId":"default","version":"current","label":"Next","banner":null,"badge":false,"noIndex":false,"className":"docs-version-current","isLast":true,"docsSidebars":{"docSidebar":[{"type":"link","label":"Getting started","href":"/","docId":"getting-started/README"},{"type":"category","label":"Quick tutorials","collapsible":true,"collapsed":false,"items":[{"type":"link","label":"Automate network policies","href":"/quick-tutorials/k8s-network-policies","docId":"quick-tutorials/k8s-network-policies"},{"type":"link","label":"Map your cluster","href":"/quick-tutorials/k8s-network-mapper","docId":"quick-tutorials/k8s-network-mapper"},{"type":"link","label":"Automate secure Kafka access","href":"/quick-tutorials/k8s-kafka-mtls","docId":"quick-tutorials/k8s-kafka-mtls"},{"type":"link","label":"Deploy mTLS between pods","href":"/quick-tutorials/k8s-mtls","docId":"quick-tutorials/k8s-mtls"}]},{"type":"category","label":"A more realistic example","collapsible":true,"collapsed":false,"items":[{"type":"link","label":"Shadow mode - network policies","href":"/realistic-example/shadow-mode-network-policies","docId":"realistic-example/shadow-mode-network-policies"},{"type":"link","label":"Access graph - Kafka","href":"/realistic-example/visualize-kafka-protection","docId":"realistic-example/visualize-kafka-protection"}]},{"type":"link","label":"Installation","href":"/installation/","docId":"installation/README"},{"type":"link","label":"IBAC: Intent-based access control","href":"/intent-based-access-control/","docId":"intent-based-access-control/README"},{"type":"link","label":"Otterize OSS","href":"/otterize-oss/","docId":"otterize-oss/README"},{"type":"category","label":"Otterize Cloud","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Object model","href":"/otterize-cloud/object-model","docId":"otterize-cloud/object-model"}],"href":"/otterize-cloud/"},{"type":"category","label":"Reference","collapsible":true,"collapsed":false,"items":[{"type":"category","label":"Configuration","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Otterize OSS Helm chart","href":"/reference/configuration/otterize-chart/","docId":"reference/configuration/otterize-chart/README"},{"type":"category","label":"Intents operator","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Helm chart","href":"/reference/configuration/intents-operator/helm-chart","docId":"reference/configuration/intents-operator/helm-chart"},{"type":"link","label":"Configuring Kafka brokers","href":"/reference/configuration/intents-operator/configuration","docId":"reference/configuration/intents-operator/configuration"}],"href":"/reference/configuration/intents-operator/"},{"type":"category","label":"Credentials operator","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Helm chart","href":"/reference/configuration/credentials-operator/helm-chart","docId":"reference/configuration/credentials-operator/helm-chart"}],"href":"/reference/configuration/credentials-operator/"},{"type":"category","label":"Network mapper","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Helm chart","href":"/reference/configuration/network-mapper/helm-chart","docId":"reference/configuration/network-mapper/helm-chart"}],"href":"/reference/configuration/network-mapper/"}]},{"type":"link","label":"CLI","href":"/reference/cli/","docId":"reference/cli/README"},{"type":"link","label":"API","href":"/reference/api/","docId":"reference/api/README"},{"type":"link","label":"Intents and intents files","href":"/reference/intents-and-intents-files/","docId":"reference/intents-and-intents-files/README"},{"type":"link","label":"Service identities and resolution","href":"/reference/service-identities/","docId":"reference/service-identities/README"},{"type":"link","label":"Terminology","href":"/reference/terminology/","docId":"reference/terminology/README"},{"type":"link","label":"Network policies deep dive","href":"/reference/network-policies/","docId":"reference/network-policies/README"},{"type":"link","label":"Kubernetes mTLS","href":"/reference/mtls/","docId":"reference/mtls/README"}]},{"type":"link","label":"Security","href":"/security/","docId":"security/README"},{"type":"link","label":"FAQ","href":"/faq/","docId":"faq/README"}]},"docs":{"faq/README":{"id":"faq/README","title":"FAQ","description":"What\'s the difference between authorization and authentication?","sidebar":"docSidebar"},"getting-started/README":{"id":"getting-started/README","title":"Getting started","description":"Otterize is a platform for implementing intent-based access control (IBAC) for workloads.","sidebar":"docSidebar"},"installation/README":{"id":"installation/README","title":"Installation","description":"Make sure you have a cluster that supports network policies","sidebar":"docSidebar"},"intent-based-access-control/README":{"id":"intent-based-access-control/README","title":"IBAC: Intent-based access control","description":"At Otterize, we believe service-to-service access control should become not only easy but actually transparent to service developers. We believe that access should not only be self-serve \u2014 that it should happen without needing to go through any extra steps beyond what developers are already doing. And we believe that access control enforcement should be completely decoupled from the functional development of the software: that as the organization improves its security and compliance posture, developers should not need to revisit their working code.","sidebar":"docSidebar"},"otterize-cloud/object-model":{"id":"otterize-cloud/object-model","title":"Object model","description":"In Otterize Cloud, as across all of the Otterize product, the central object is the intent. Intent-based access control (IBAC) bases the authorization model of a server on the set of calls its clients declare they intend to make, granting them access to make declared calls, while blocking undeclared calls.","sidebar":"docSidebar"},"otterize-cloud/README":{"id":"otterize-cloud/README","title":"Otterize Cloud","description":"Otterize Cloud provides a cloud-based control plane for deploying and managing intents-based access control (IBAC).","sidebar":"docSidebar"},"otterize-oss/README":{"id":"otterize-oss/README","title":"Otterize OSS","description":"Otterize OSS implements intent-based access control (IBAC) in a single Kubernetes cluster.","sidebar":"docSidebar"},"quick-tutorials/k8s-kafka-mtls":{"id":"quick-tutorials/k8s-kafka-mtls","title":"Automate secure Kafka access","description":"This tutorial will walk you through declaring and applying intents to easily secure access to Kafka,","sidebar":"docSidebar"},"quick-tutorials/k8s-mtls":{"id":"quick-tutorials/k8s-mtls","title":"Deploy mTLS between pods","description":"Otterize can automatically provision mTLS credentials by using the service identities implied by Kubernetes.","sidebar":"docSidebar"},"quick-tutorials/k8s-network-mapper":{"id":"quick-tutorials/k8s-network-mapper","title":"Map your cluster","description":"The network mapper allows you to map pod-to-pod traffic within your K8s cluster.","sidebar":"docSidebar"},"quick-tutorials/k8s-network-policies":{"id":"quick-tutorials/k8s-network-policies","title":"Automate network policies","description":"Otterize automates pod-to-pod access control with network policies, within your cluster.","sidebar":"docSidebar"},"realistic-example/shadow-mode-network-policies":{"id":"realistic-example/shadow-mode-network-policies","title":"Shadow mode - network policies","description":"Otterize Cloud extends the capabilities of Otterize OSS. It lets you visualize discovered communication within your cluster using the access graph, apply intents and see what will happen to communication between your workloads before enforcing shadow mode, and gain real-time insights into how to roll out network policies.","sidebar":"docSidebar"},"realistic-example/visualize-kafka-protection":{"id":"realistic-example/visualize-kafka-protection","title":"Access graph - Kafka","description":"Otterize Cloud extends the capabilities of Otterize OSS for configuring mTLS between workloads and Kafka ACLs. You can visualize and explore each workload\'s credentials using Otterize Cloud credential provider. Visualize each workload\'s Kafka topic-level intents and inspect your Kafka broker\'s topic protection configuration.","sidebar":"docSidebar"},"reference/api/README":{"id":"reference/api/README","title":"API","description":"You are welcome to browse our API documentation at - https://app.otterize.com/api","sidebar":"docSidebar"},"reference/cli/README":{"id":"reference/cli/README","title":"CLI","description":"The Otterize command line interface (CLI) offers the following capabilities:","sidebar":"docSidebar"},"reference/configuration/credentials-operator/helm-chart":{"id":"reference/configuration/credentials-operator/helm-chart","title":"Helm chart","description":"You can use the Credentials operator\'s Helm chart to deploy the Credentials operator on its own, and configure a SPIRE server for it to work with according to the parameters value.","sidebar":"docSidebar"},"reference/configuration/credentials-operator/README":{"id":"reference/configuration/credentials-operator/README","title":"Credentials operator","description":"The Otterize Credentials operator automatically resolves pods to dev-friendly service names, registers them with a SPIRE server or with Otterize Cloud, and provisions credentials as Kubernetes Secrets.","sidebar":"docSidebar"},"reference/configuration/intents-operator/configuration":{"id":"reference/configuration/intents-operator/configuration","title":"Configuring Kafka brokers","description":"The intents operator is able to create network policies with zero configuration. But in order to apply Kafka ACLs to a Kafka broker, the operator must know how to connect.","sidebar":"docSidebar"},"reference/configuration/intents-operator/helm-chart":{"id":"reference/configuration/intents-operator/helm-chart","title":"Helm chart","description":"You can use the intents operator\'s Helm chart to deploy the intents operator on its own, and configure it to work with the Otterize Credentials operator to acquire mTLS credentials.","sidebar":"docSidebar"},"reference/configuration/intents-operator/README":{"id":"reference/configuration/intents-operator/README","title":"Intents operator","description":"The Otterize intents operator is an open source Kubernetes operator for easily managing service-to-service authorization","sidebar":"docSidebar"},"reference/configuration/network-mapper/helm-chart":{"id":"reference/configuration/network-mapper/helm-chart","title":"Helm chart","description":"To deploy the network mapper, do the following:","sidebar":"docSidebar"},"reference/configuration/network-mapper/README":{"id":"reference/configuration/network-mapper/README","title":"Network mapper","description":"The Otterize network mapper creates a map of in-cluster traffic by (1) capturing DNS traffic and (2) inspecting active connections in the same manner netstat does, then resolving the IP addresses participating in connections to the Pods, and crawling up the ownership of the Pod until it reaches the root object. See Service identities to learn more on how service name resolving happens. The network mapper continues building the network map as long as it\'s deployed.","sidebar":"docSidebar"},"reference/configuration/otterize-chart/README":{"id":"reference/configuration/otterize-chart/README","title":"Otterize OSS Helm chart","description":"The Otterize OSS helm chart is a chart that installs all Otterize components and supporting components together, and configures them to work with each other.","sidebar":"docSidebar"},"reference/intents-and-intents-files/README":{"id":"reference/intents-and-intents-files/README","title":"Intents and intents files","description":"Intent-based access control is, not surprisingly, centered around declaring intents &mdash; specifically, declaring client intents","sidebar":"docSidebar"},"reference/mtls/README":{"id":"reference/mtls/README","title":"Kubernetes mTLS","description":"Otterize can automatically provision mTLS credentials using Kubernetes pod identities","sidebar":"docSidebar"},"reference/network-policies/README":{"id":"reference/network-policies/README","title":"Network policies deep dive","description":"Network policies are one of the tools we","sidebar":"docSidebar"},"reference/service-identities/README":{"id":"reference/service-identities/README","title":"Service identities and resolution","description":"Otterize uses universal service identities to refer to services, regardless of which infrastructure they run on. Every service has a name, and possibly a namespace, which is specified in Otterize client intents to request access to other services.","sidebar":"docSidebar"},"reference/terminology/README":{"id":"reference/terminology/README","title":"Terminology","description":"An overview of the terminology used in Otterize OSS documentation.","sidebar":"docSidebar"},"security/README":{"id":"security/README","title":"Security","description":"Service-to-service zero trust","sidebar":"docSidebar"}}}')}}]);