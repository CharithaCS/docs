"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[876],{3905:(e,t,n)=>{n.d(t,{Zo:()=>p,kt:()=>m});var r=n(7294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var c=r.createContext({}),s=function(e){var t=r.useContext(c),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},p=function(e){var t=s(e.components);return r.createElement(c.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},u=r.forwardRef((function(e,t){var n=e.components,o=e.mdxType,a=e.originalType,c=e.parentName,p=l(e,["components","mdxType","originalType","parentName"]),u=s(n),m=o,f=u["".concat(c,".").concat(m)]||u[m]||d[m]||a;return n?r.createElement(f,i(i({ref:t},p),{},{components:n})):r.createElement(f,i({ref:t},p))}));function m(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var a=n.length,i=new Array(a);i[0]=u;var l={};for(var c in t)hasOwnProperty.call(t,c)&&(l[c]=t[c]);l.originalType=e,l.mdxType="string"==typeof e?e:o,i[1]=l;for(var s=2;s<a;s++)i[s]=n[s];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}u.displayName="MDXCreateElement"},7612:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>i,default:()=>d,frontMatter:()=>a,metadata:()=>l,toc:()=>s});var r=n(7462),o=(n(7294),n(3905));const a={sidebar_position:2},i="Credential operator",l={unversionedId:"documentation/components/credential-operator",id:"documentation/components/credential-operator",title:"Credential operator",description:"The Otterize operator manages client intents and credentials provisioning.",source:"@site/docs/documentation/5-components/2-credential-operator.md",sourceDirName:"documentation/5-components",slug:"/documentation/components/credential-operator",permalink:"/documentation/components/credential-operator",draft:!1,editUrl:"https://github.com/otterize/docs/edit/main/docs/documentation/5-components/2-credential-operator.md",tags:[],version:"current",sidebarPosition:2,frontMatter:{sidebar_position:2},sidebar:"docSidebar",previous:{title:"Overview",permalink:"/documentation/components/operator"},next:{title:"Behavior",permalink:"/documentation/components/behavior"}},c={},s=[{value:"Components",id:"components",level:2},{value:"Credential Operator",id:"credential-operator-1",level:3},{value:"SPIRE server",id:"spire-server",level:3},{value:"Credentials",id:"credentials",level:2},{value:"Lifecycle",id:"lifecycle",level:3},{value:"Types",id:"types",level:3},{value:"What you&#39;ll need",id:"what-youll-need",level:3}],p={toc:s};function d(e){let{components:t,...n}=e;return(0,o.kt)("wrapper",(0,r.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"credential-operator"},"Credential operator"),(0,o.kt)("p",null,"The Otterize operator manages client intents and credentials provisioning."),(0,o.kt)("h2",{id:"components"},"Components"),(0,o.kt)("h3",{id:"credential-operator-1"},"Credential Operator"),(0,o.kt)("p",null,"The ",(0,o.kt)("inlineCode",{parentName:"p"},"Credential Operator")," is responsible for credential generation. It uses a ",(0,o.kt)("a",{parentName:"p",href:"https://github.com/spiffe/spire"},(0,o.kt)("inlineCode",{parentName:"a"},"SPIRE")),"\nserver as a key store and a provisioning mechanism.\nResponsible for tracking annotated pods and generating credentials accordingly."),(0,o.kt)("h3",{id:"spire-server"},"SPIRE server"),(0,o.kt)("p",null,"Otterize provides a built-in ",(0,o.kt)("inlineCode",{parentName:"p"},"SPIRE")," server for easy integration, but users are welcome to use their own.\nSee ","[configuration]"," for details about how to configure Otterize to work with your existing SPIRE server."),(0,o.kt)("h2",{id:"credentials"},"Credentials"),(0,o.kt)("h3",{id:"lifecycle"},"Lifecycle"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"On ",(0,o.kt)("inlineCode",{parentName:"li"},"Pod Start")," if it is annotated with ",(0,o.kt)("inlineCode",{parentName:"li"},"otterize/tls-secret-name")," credentials are generated and stored in a K8s secret named as the value of the annotation")),(0,o.kt)("h3",{id:"types"},"Types"),(0,o.kt)("p",null,"x509 credentials can be generated in two flavors:"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"PEM files",(0,o.kt)("ul",{parentName:"li"},(0,o.kt)("li",{parentName:"ul"},"Trust bundle"),(0,o.kt)("li",{parentName:"ul"},"SVID"),(0,o.kt)("li",{parentName:"ul"},"private key"))),(0,o.kt)("li",{parentName:"ul"},"Trust and key stores")),(0,o.kt)("h3",{id:"what-youll-need"},"What you'll need"))}d.isMDXComponent=!0}}]);