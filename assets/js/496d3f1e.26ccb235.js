"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[417],{3905:(e,t,n)=>{n.d(t,{Zo:()=>p,kt:()=>m});var a=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function l(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?l(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):l(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},l=Object.keys(e);for(a=0;a<l.length;a++)n=l[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(a=0;a<l.length;a++)n=l[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var s=a.createContext({}),c=function(e){var t=a.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},p=function(e){var t=c(e.components);return a.createElement(s.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},d=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,l=e.originalType,s=e.parentName,p=i(e,["components","mdxType","originalType","parentName"]),d=c(n),m=r,h=d["".concat(s,".").concat(m)]||d[m]||u[m]||l;return n?a.createElement(h,o(o({ref:t},p),{},{components:n})):a.createElement(h,o({ref:t},p))}));function m(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var l=n.length,o=new Array(l);o[0]=d;var i={};for(var s in t)hasOwnProperty.call(t,s)&&(i[s]=t[s]);i.originalType=e,i.mdxType="string"==typeof e?e:r,o[1]=i;for(var c=2;c<l;c++)o[c]=n[c];return a.createElement.apply(null,o)}return a.createElement.apply(null,n)}d.displayName="MDXCreateElement"},5162:(e,t,n)=>{n.d(t,{Z:()=>o});var a=n(7294),r=n(6010);const l="tabItem_Ymn6";function o(e){let{children:t,hidden:n,className:o}=e;return a.createElement("div",{role:"tabpanel",className:(0,r.Z)(l,o),hidden:n},t)}},5488:(e,t,n)=>{n.d(t,{Z:()=>m});var a=n(7462),r=n(7294),l=n(6010),o=n(2389),i=n(7392),s=n(7094),c=n(2466);const p="tabList__CuJ",u="tabItem_LNqP";function d(e){var t,n;const{lazy:o,block:d,defaultValue:m,values:h,groupId:g,className:k}=e,f=r.Children.map(e.children,(e=>{if((0,r.isValidElement)(e)&&"value"in e.props)return e;throw new Error("Docusaurus error: Bad <Tabs> child <"+("string"==typeof e.type?e.type:e.type.name)+'>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.')})),v=null!=h?h:f.map((e=>{let{props:{value:t,label:n,attributes:a}}=e;return{value:t,label:n,attributes:a}})),y=(0,i.l)(v,((e,t)=>e.value===t.value));if(y.length>0)throw new Error('Docusaurus error: Duplicate values "'+y.map((e=>e.value)).join(", ")+'" found in <Tabs>. Every value needs to be unique.');const b=null===m?m:null!=(t=null!=m?m:null==(n=f.find((e=>e.props.default)))?void 0:n.props.value)?t:f[0].props.value;if(null!==b&&!v.some((e=>e.value===b)))throw new Error('Docusaurus error: The <Tabs> has a defaultValue "'+b+'" but none of its children has the corresponding value. Available values are: '+v.map((e=>e.value)).join(", ")+". If you intend to show no default tab, use defaultValue={null} instead.");const{tabGroupChoices:N,setTabGroupChoices:w}=(0,s.U)(),[T,S]=(0,r.useState)(b),O=[],{blockElementScrollPositionUntilNextRender:z}=(0,c.o5)();if(null!=g){const e=N[g];null!=e&&e!==T&&v.some((t=>t.value===e))&&S(e)}const x=e=>{const t=e.currentTarget,n=O.indexOf(t),a=v[n].value;a!==T&&(z(t),S(a),null!=g&&w(g,String(a)))},C=e=>{var t;let n=null;switch(e.key){case"ArrowRight":{var a;const t=O.indexOf(e.currentTarget)+1;n=null!=(a=O[t])?a:O[0];break}case"ArrowLeft":{var r;const t=O.indexOf(e.currentTarget)-1;n=null!=(r=O[t])?r:O[O.length-1];break}}null==(t=n)||t.focus()};return r.createElement("div",{className:(0,l.Z)("tabs-container",p)},r.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,l.Z)("tabs",{"tabs--block":d},k)},v.map((e=>{let{value:t,label:n,attributes:o}=e;return r.createElement("li",(0,a.Z)({role:"tab",tabIndex:T===t?0:-1,"aria-selected":T===t,key:t,ref:e=>O.push(e),onKeyDown:C,onFocus:x,onClick:x},o,{className:(0,l.Z)("tabs__item",u,null==o?void 0:o.className,{"tabs__item--active":T===t})}),null!=n?n:t)}))),o?(0,r.cloneElement)(f.filter((e=>e.props.value===T))[0],{className:"margin-top--md"}):r.createElement("div",{className:"margin-top--md"},f.map(((e,t)=>(0,r.cloneElement)(e,{key:t,hidden:e.props.value!==T})))))}function m(e){const t=(0,o.Z)();return r.createElement(d,(0,a.Z)({key:String(t)},e))}},1598:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>p,contentTitle:()=>s,default:()=>m,frontMatter:()=>i,metadata:()=>c,toc:()=>u});var a=n(7462),r=(n(7294),n(3905)),l=n(5488),o=n(5162);const i={sidebar_position:4},s="Tutorial for mTLS",c={unversionedId:"documentation/getting-started/mtls",id:"documentation/getting-started/mtls",title:"Tutorial for mTLS",description:"This tutorial will walk you through deploying mTLS certificates on a sample client-server deployment.",source:"@site/docs/documentation/2-getting-started/4-mtls.md",sourceDirName:"documentation/2-getting-started",slug:"/documentation/getting-started/mtls",permalink:"/documentation/getting-started/mtls",draft:!1,editUrl:"https://github.com/otterize/docs/edit/main/docs/documentation/2-getting-started/4-mtls.md",tags:[],version:"current",sidebarPosition:4,frontMatter:{sidebar_position:4},sidebar:"docSidebar",previous:{title:"Tutorial for Network Policies",permalink:"/documentation/getting-started/network-policies"},next:{title:"Tutorial for Kafka + mTLS",permalink:"/documentation/getting-started/kafka-mtls"}},p={},u=[{value:"Install Otterize (enable mTLS)",id:"install-otterize-enable-mtls",level:2},{value:"Concepts",id:"concepts",level:2},{value:"Sample deployment",id:"sample-deployment",level:3},{value:"Configure deployments",id:"configure-deployments",level:3},{value:"Otterize pod identity resolution",id:"otterize-pod-identity-resolution",level:3},{value:"How to",id:"how-to",level:2},{value:"Deploy",id:"deploy",level:3},{value:"Inspect credentials",id:"inspect-credentials",level:3},{value:"Teardown",id:"teardown",level:3},{value:"What&#39;s next",id:"whats-next",level:2}],d={toc:u};function m(e){let{components:t,...n}=e;return(0,r.kt)("wrapper",(0,a.Z)({},d,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"tutorial-for-mtls"},"Tutorial for mTLS"),(0,r.kt)("p",null,"This tutorial will walk you through deploying mTLS certificates on a sample client-server deployment.\nWe will install Otterize, look at a sample deployment and learn how Otterize resolves pod identities.\nNext, we will generate credentials and mount them to pods\nand wrap it all up by deploying a sample project to practice all concepts in this tutorial."),(0,r.kt)("h2",{id:"install-otterize-enable-mtls"},"Install Otterize (enable mTLS)"),(0,r.kt)("p",null,"Module"),(0,r.kt)("h2",{id:"concepts"},"Concepts"),(0,r.kt)("h3",{id:"sample-deployment"},"Sample deployment"),(0,r.kt)("p",null,"We will use a JS client and server configured to use mTLS as follows."),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("inlineCode",{parentName:"p"},"Client")," snippet"),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-js"},"const fs = require('fs');\nconst https = require('https');\n\nconst options = {\n    hostname: 'server.otterize-tutorial-mtls',\n    port: 443,\n    path: '/hello',\n    method: 'GET',\n    cert: fs.readFileSync('/var/otterize/credentials/svid.pem'),\n    key: fs.readFileSync('/var/otterize/credentials/key.pem'),\n    ca: fs.readFileSync('/var/otterize/credentials/bundle.pem')\n}\n\nconst req = https.request(\n    options,\n    res => {\n        res.on('data', function (data) {\n            console.log(data.toString())\n        });\n    }\n);\n\nreq.end();\n"))),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("inlineCode",{parentName:"p"},"Server")," snippet"),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-js"}," const https = require(`https`);\n const fs = require(`fs`);\n \n const options = {\n     key: fs.readFileSync('/var/otterize/credentials/key.pem'),\n     cert: fs.readFileSync('/var/otterize/credentials/svid.pem'),\n     ca: fs.readFileSync('/var/otterize/credentials/bundle.pem'),\n     requestCert: true\n };\n \n https.createServer(options, (req, res) => {\n     console.log(req.method + \" \" + req.url);\n     if (req.url === '/hello') {\n         res.writeHead(200);\n         res.end(`Hello world mTLS`);\n     } else {\n         res.end();\n     }\n }).listen(443);\n")))),(0,r.kt)("h3",{id:"configure-deployments"},"Configure deployments"),(0,r.kt)("p",null,"To generate credentials for a pod we simply need to update the deployment by annotating it.\nOtterize will identify the annotation and follow by generating and mounting the credentials."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-yaml"},"spec:\n  template:\n    metadata:\n      ...\n      annotations:\n        # highlight-next-line\n        otterize/credentials-secret-name: client-credentials-secret\n    spec:\n      containers:\n        - name: client\n          ...\n          volumeMounts:\n            # highlight-start\n            - name: otterize-credentials\n              mountPath: /var/otterize/credentials\n              readOnly: true\n            # highlight-end\n      volumes:\n        # highlight-start\n        - name: otterize-credentials\n          secret:\n            secretName: client-credentials-secret\n        # highlight-end\n")),(0,r.kt)("admonition",{type:"tip"},(0,r.kt)("p",{parentName:"admonition"},"You can automate this by templating the process using helm, XXX, YYY. See XXXX.")),(0,r.kt)("admonition",{type:"info"},(0,r.kt)("p",{parentName:"admonition"},"Visit the ",(0,r.kt)("a",{parentName:"p",href:"/documentation/credential-operator/behavior"},"Behavior")," section to view all parameters available as pod\nannotation for generating mTLS credentials.")),(0,r.kt)("h3",{id:"otterize-pod-identity-resolution"},"Otterize pod identity resolution"),(0,r.kt)("p",null,"Otterize resolves pod identities automatically by using their ",(0,r.kt)("inlineCode",{parentName:"p"},"resource owner")," (e.g. deployment) ",(0,r.kt)("strong",{parentName:"p"},"name")," and ",(0,r.kt)("strong",{parentName:"p"},"\nnamespace"),"."),(0,r.kt)("p",null,"In this example the pod identity will be resolved to ",(0,r.kt)("inlineCode",{parentName:"p"},"client.otterize-tutorial-mtls"),"."),(0,r.kt)("admonition",{type:"note"},(0,r.kt)("p",{parentName:"admonition"},"To read more about how Otterize resolves pod identities and how to manually control the process pleas read XXX.")),(0,r.kt)("h2",{id:"how-to"},"How to"),(0,r.kt)("h3",{id:"deploy"},"Deploy"),(0,r.kt)("p",null,"Our sample project consists of a client and server pods pair communicating with HTTP over mTLS."),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},"Deploy the client and server using ",(0,r.kt)("inlineCode",{parentName:"li"},"kubectl"),".")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"kubectl create namespace otterize-tutorial-mtls && \\\nkubectl apply -f code-examples/getting-started/tutorials/deploy-mtls\n")),(0,r.kt)("ol",{start:2},(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"Confirm that the client can successfully call the server using HTTP over mTLS with:"),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"kubectl logs --tail 1 -n otterize-tutorial-mtls deploy/client\n")),(0,r.kt)("p",{parentName:"li"},"You should see the following line"),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-shell"},"Hello world mTLS\n")))),(0,r.kt)("h3",{id:"inspect-credentials"},"Inspect credentials"),(0,r.kt)("p",null,"We can use openssl to inspect the generated certificates. The certificates are stored as ",(0,r.kt)("inlineCode",{parentName:"p"},"K8s secrets")," and are also\n",(0,r.kt)("inlineCode",{parentName:"p"},"mounted inside pods"),"."),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"We will first retrieve them"),(0,r.kt)(l.Z,{mdxType:"Tabs"},(0,r.kt)(o.Z,{value:"secret-direct",label:"K8s secret",default:!0,mdxType:"TabItem"},(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-shell"},"kubectl get secret -n otterize-tutorial-mtls client-credentials-secret -o jsonpath='{.data.svid\\.pem}' | base64 -d > svid.pem\n"))),(0,r.kt)(o.Z,{value:"secret-pod",label:"K8s pod mount",default:!0,mdxType:"TabItem"},(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-shell"},"kubectl exec -n otterize-tutorial-mtls -it deploy/client -- cat /var/otterize/credentials/svid.pem > svid.pem\n"))))),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"And now we can inspect them"),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-shell"},"openssl x509 -in svid.pem -text | head -n 15\n")),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-x509",metastring:'title="Output"',title:'"Output"'},"Certificate:\n    Data:\n        Version: 3 (0x2)\n        Serial Number:\n            0b:eb:eb:4d:0e:02:7e:28:93:30:1c:55:26:22:8b:c7\n        Signature Algorithm: sha256WithRSAEncryption\n        Issuer: C = US, O = SPIRE\n        Validity\n            Not Before: Aug 24 12:19:57 2022 GMT\n            Not After : Sep 23 12:20:07 2022 GMT\n        Subject: C = US, O = SPIRE, CN = client.otterize-tutorial-mtls\n        Subject Public Key Info:\n            Public Key Algorithm: id-ecPublicKey\n                Public-Key: (256 bit)\n                pub:\n")))),(0,r.kt)("h3",{id:"teardown"},"Teardown"),(0,r.kt)("p",null,"To remove the deployed resources run"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"kubectl delete namespace otterize-tutorial-mtls\n")),(0,r.kt)("h2",{id:"whats-next"},"What's next"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Read about how to ",(0,r.kt)("a",{parentName:"li",href:"/documentation/sdk-integration/credential-sdk-integration"},"integrate")," mTLS into common SDKs and frameworks"),(0,r.kt)("li",{parentName:"ul"},"Enforce ",(0,r.kt)("a",{parentName:"li",href:"/documentation/getting-started/kafka-mtls"},"secure Kafka access")," with mTLS")))}m.isMDXComponent=!0}}]);