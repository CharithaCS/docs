"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[880],{5162:(e,t,a)=>{a.d(t,{Z:()=>r});var n=a(7294),l=a(6010);const o="tabItem_Ymn6";function r(e){let{children:t,hidden:a,className:r}=e;return n.createElement("div",{role:"tabpanel",className:(0,l.Z)(o,r),hidden:a},t)}},5488:(e,t,a)=>{a.d(t,{Z:()=>m});var n=a(7462),l=a(7294),o=a(6010),r=a(2389),i=a(7392),s=a(7094),c=a(2466);const p="tabList__CuJ",u="tabItem_LNqP";function k(e){var t,a;const{lazy:r,block:k,defaultValue:m,values:d,groupId:h,className:f}=e,g=l.Children.map(e.children,(e=>{if((0,l.isValidElement)(e)&&"value"in e.props)return e;throw new Error("Docusaurus error: Bad <Tabs> child <"+("string"==typeof e.type?e.type:e.type.name)+'>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.')})),b=null!=d?d:g.map((e=>{let{props:{value:t,label:a,attributes:n}}=e;return{value:t,label:a,attributes:n}})),w=(0,i.l)(b,((e,t)=>e.value===t.value));if(w.length>0)throw new Error('Docusaurus error: Duplicate values "'+w.map((e=>e.value)).join(", ")+'" found in <Tabs>. Every value needs to be unique.');const v=null===m?m:null!=(t=null!=m?m:null==(a=g.find((e=>e.props.default)))?void 0:a.props.value)?t:g[0].props.value;if(null!==v&&!b.some((e=>e.value===v)))throw new Error('Docusaurus error: The <Tabs> has a defaultValue "'+v+'" but none of its children has the corresponding value. Available values are: '+b.map((e=>e.value)).join(", ")+". If you intend to show no default tab, use defaultValue={null} instead.");const{tabGroupChoices:y,setTabGroupChoices:N}=(0,s.U)(),[T,z]=(0,l.useState)(v),C=[],{blockElementScrollPositionUntilNextRender:x}=(0,c.o5)();if(null!=h){const e=y[h];null!=e&&e!==T&&b.some((t=>t.value===e))&&z(e)}const S=e=>{const t=e.currentTarget,a=C.indexOf(t),n=b[a].value;n!==T&&(x(t),z(n),null!=h&&N(h,String(n)))},K=e=>{var t;let a=null;switch(e.key){case"ArrowRight":{var n;const t=C.indexOf(e.currentTarget)+1;a=null!=(n=C[t])?n:C[0];break}case"ArrowLeft":{var l;const t=C.indexOf(e.currentTarget)-1;a=null!=(l=C[t])?l:C[C.length-1];break}}null==(t=a)||t.focus()};return l.createElement("div",{className:(0,o.Z)("tabs-container",p)},l.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,o.Z)("tabs",{"tabs--block":k},f)},b.map((e=>{let{value:t,label:a,attributes:r}=e;return l.createElement("li",(0,n.Z)({role:"tab",tabIndex:T===t?0:-1,"aria-selected":T===t,key:t,ref:e=>C.push(e),onKeyDown:K,onFocus:S,onClick:S},r,{className:(0,o.Z)("tabs__item",u,null==r?void 0:r.className,{"tabs__item--active":T===t})}),null!=a?a:t)}))),r?(0,l.cloneElement)(g.filter((e=>e.props.value===T))[0],{className:"margin-top--md"}):l.createElement("div",{className:"margin-top--md"},g.map(((e,t)=>(0,l.cloneElement)(e,{key:t,hidden:e.props.value!==T})))))}function m(e){const t=(0,r.Z)();return l.createElement(k,(0,n.Z)({key:String(t)},e))}},3834:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>p,contentTitle:()=>s,default:()=>m,frontMatter:()=>i,metadata:()=>c,toc:()=>u});var n=a(7462),l=(a(7294),a(3905)),o=(a(814),a(5488)),r=a(5162);const i={sidebar_position:2,title:"Access graph - Kafka"},s=void 0,c={unversionedId:"realistic-example/visualize-kafka-protection",id:"realistic-example/visualize-kafka-protection",title:"Access graph - Kafka",description:"Otterize Cloud extends the capabilities of Otterize OSS for configuring mTLS between workloads and Kafka ACLs. You can visualize and explore each workload's credentials using Otterize Cloud credential provider. Visualize each workload's Kafka topic-level intents and inspect your Kafka broker's topic protection configuration.",source:"@site/docs/realistic-example/visualize-kafka-protection.mdx",sourceDirName:"realistic-example",slug:"/realistic-example/visualize-kafka-protection",permalink:"/realistic-example/visualize-kafka-protection",draft:!1,editUrl:"https://github.com/otterize/docs/edit/main/docs/realistic-example/visualize-kafka-protection.mdx",tags:[],version:"current",sidebarPosition:2,frontMatter:{sidebar_position:2,title:"Access graph - Kafka"},sidebar:"docSidebar",previous:{title:"Shadow mode - network policies",permalink:"/realistic-example/shadow-mode-network-policies"},next:{title:"Installation",permalink:"/installation/"}},p={},u=[{value:"Prerequisites",id:"prerequisites",level:2},{value:"Environment setup",id:"environment-setup",level:2},{value:"Deploy the reference lab with mTLS for Kafka and its clients",id:"deploy-the-reference-lab-with-mtls-for-kafka-and-its-clients",level:3},{value:"Apply intents for workloads",id:"apply-intents-for-workloads",level:3},{value:"Manage Kafka access with Otterize",id:"manage-kafka-access-with-otterize",level:2},{value:"Declare Kafka intents",id:"declare-kafka-intents",level:2},{value:"What&#39;s next",id:"whats-next",level:2},{value:"Teardown",id:"teardown",level:2}],k={toc:u};function m(e){let{components:t,...i}=e;return(0,l.kt)("wrapper",(0,n.Z)({},k,i,{components:t,mdxType:"MDXLayout"}),(0,l.kt)("p",null,"Otterize Cloud extends the capabilities of Otterize OSS for configuring mTLS between workloads and Kafka ACLs. You can visualize and explore each workload's credentials using Otterize Cloud credential provider. Visualize each workload's Kafka topic-level intents and inspect your Kafka broker's topic protection configuration."),(0,l.kt)("p",null,"In this tutorial, we will:"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"Deploy a demo reference lab,\nwhich is based on the ",(0,l.kt)("a",{parentName:"li",href:"https://github.com/GoogleCloudPlatform/microservices-demo"},"Google microservices demo"),"\nsimulating an e-commerce application."),(0,l.kt)("li",{parentName:"ul"},"Use the access graph to gain confidence in how Otterize can help in gradually rolling out secure access for Kafka.")),(0,l.kt)("h2",{id:"prerequisites"},"Prerequisites"),(0,l.kt)("details",null,(0,l.kt)("summary",null,"Prepare a cluster that supports network policies"),(0,l.kt)("p",null,"Before you start, you need a Kubernetes cluster with a ",(0,l.kt)("a",{parentName:"p",href:"https://kubernetes.io/docs/concepts/extend-kubernetes/compute-storage-net/network-plugins/"},"CNI")," that supports ",(0,l.kt)("a",{parentName:"p",href:"https://kubernetes.io/docs/concepts/services-networking/network-policies/"},"NetworkPolicies"),"."),(0,l.kt)("p",null,"Below are instructions for setting up a cluster with network policies.\nIf you don't have a cluster already, we recommend starting out with a Minikube cluster."),(0,l.kt)(o.Z,{groupId:"cni",mdxType:"Tabs"},(0,l.kt)(r.Z,{value:"minikube",label:"Minikube",mdxType:"TabItem"},"Start your Minikube cluster. ",(0,l.kt)("a",{href:"https://minikube.sigs.k8s.io/docs/start/"},"Don't have the Minikube CLI? Read the installation instructions"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"minikube start --network-plugin=cni\n")),(0,l.kt)("p",null,"Install Calico:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"kubectl apply -f https://raw.githubusercontent.com/projectcalico/calico/v3.24.1/manifests/calico.yaml\n")),(0,l.kt)("p",null,"You need to install Calico because Minikube does not support network policy enforcement by default; Calico helps solve this issue.")),(0,l.kt)(r.Z,{value:"gke",label:"Google GKE",mdxType:"TabItem"},(0,l.kt)("a",{href:"https://cloud.google.com/kubernetes-engine/docs/how-to/network-policy#gcloud"},"Visit the official documentation"),", or follow the instructions below:",(0,l.kt)(o.Z,{mdxType:"Tabs"},(0,l.kt)(r.Z,{value:"cli",label:"gcloud CLI",mdxType:"TabItem"},(0,l.kt)("p",null,"To use the gcloud CLI for this tutorial, ",(0,l.kt)("a",{parentName:"p",href:"https://cloud.google.com/sdk/docs/install"},"install")," and then\n",(0,l.kt)("a",{parentName:"p",href:"https://cloud.google.com/sdk/docs/initializing"},"initialize")," it."),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},(0,l.kt)("em",{parentName:"strong"},"To enable network policy enforcement when creating a new cluster, run the following command:"))),(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},"gcloud container clusters create CLUSTER_NAME --enable-network-policy --zone=ZONE"),"\nReplace CLUSTER_NAME with the name of the new cluster."),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},(0,l.kt)("em",{parentName:"strong"},"To enable network policy enforcement for an existing cluster, perform the following tasks:"))),(0,l.kt)("p",null,"Run the following command to enable the add-on:"),(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},"gcloud container clusters update CLUSTER_NAME --update-addons=NetworkPolicy=ENABLED"),"\nReplace CLUSTER_NAME with the name of the cluster."),(0,l.kt)("p",null,"Run the following command to enable network policy enforcement in your cluster, which in turn re-creates your cluster's node pools with network policy enforcement enabled:"),(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},"gcloud container clusters update CLUSTER_NAME --enable-network-policy"))),(0,l.kt)(r.Z,{value:"console",label:"Console",mdxType:"TabItem"},(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},(0,l.kt)("em",{parentName:"strong"},"To enable network policy enforcement when creating a new cluster:"))),(0,l.kt)("ol",null,(0,l.kt)("li",{parentName:"ol"},(0,l.kt)("p",{parentName:"li"},"Go to the Google Kubernetes Engine page in the Google Cloud console.\nThe remaining steps will appear automatically in the Google Cloud console.")),(0,l.kt)("li",{parentName:"ol"},(0,l.kt)("p",{parentName:"li"},"On the Google Kubernetes Engine page, click Create.")),(0,l.kt)("li",{parentName:"ol"},(0,l.kt)("p",{parentName:"li"},"Configure your cluster as desired.")),(0,l.kt)("li",{parentName:"ol"},(0,l.kt)("p",{parentName:"li"},"From the navigation pane, under Cluster, click Networking.")),(0,l.kt)("li",{parentName:"ol"},(0,l.kt)("p",{parentName:"li"},"Select the checkbox to Enable network policy.")),(0,l.kt)("li",{parentName:"ol"},(0,l.kt)("p",{parentName:"li"},"Click Create."))),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},(0,l.kt)("em",{parentName:"strong"},"To enable network policy enforcement for an existing cluster:"))),(0,l.kt)("ol",null,(0,l.kt)("li",{parentName:"ol"},(0,l.kt)("p",{parentName:"li"},"Go to the Google Kubernetes Engine page in the Google Cloud console. The remaining steps will appear automatically in the Google Cloud console.")),(0,l.kt)("li",{parentName:"ol"},(0,l.kt)("p",{parentName:"li"},"In the cluster list, click the name of the cluster you want to modify.")),(0,l.kt)("li",{parentName:"ol"},(0,l.kt)("p",{parentName:"li"},"Under Networking, in the Network policy field, click Edit network policy.")),(0,l.kt)("li",{parentName:"ol"},(0,l.kt)("p",{parentName:"li"},"Select the checkbox to Enable network policy for master and click Save Changes.")),(0,l.kt)("li",{parentName:"ol"},(0,l.kt)("p",{parentName:"li"},"Wait for your changes to apply, and then click Edit network policy again.")),(0,l.kt)("li",{parentName:"ol"},(0,l.kt)("p",{parentName:"li"},"Select the checkbox to Enable network policy for nodes.")),(0,l.kt)("li",{parentName:"ol"},(0,l.kt)("p",{parentName:"li"},"Click Save Changes.")))))),(0,l.kt)(r.Z,{value:"eks",label:"AWS EKS",mdxType:"TabItem"},(0,l.kt)("a",{href:"https://docs.aws.amazon.com/eks/latest/userguide/calico.html"},"Visit the official documentation"),", or follow the instructions below:",(0,l.kt)("ol",null,(0,l.kt)("li",{parentName:"ol"},"Spin up an ",(0,l.kt)("a",{parentName:"li",href:"https://docs.aws.amazon.com/eks/latest/userguide/create-cluster.html"},"EKS cluster")," using the console, AWS CLI or ",(0,l.kt)("inlineCode",{parentName:"li"},"eksctl"),"."),(0,l.kt)("li",{parentName:"ol"},"Install Calico for NetworkPolicy enforcement, without replacing the CNI:")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"kubectl apply -f https://raw.githubusercontent.com/aws/amazon-vpc-cni-k8s/master/config/master/calico-operator.yaml\nkubectl apply -f https://raw.githubusercontent.com/aws/amazon-vpc-cni-k8s/master/config/master/calico-crs.yaml\n"))),(0,l.kt)(r.Z,{value:"aks",label:"Azure AKS",mdxType:"TabItem"},(0,l.kt)("p",null,"You can set up an AKS cluster using this ",(0,l.kt)("a",{parentName:"p",href:"https://learn.microsoft.com/en-us/azure/aks/learn/quick-kubernetes-deploy-cli"},"guide"),"."),(0,l.kt)("p",null,"For network policy support, no setup is required: Azure AKS comes with a built-in network policy implementation called Azure Network Policy Manager. You choose whether you'd like to use this option or Calico when you create a cluster."),(0,l.kt)("a",{href:"https://learn.microsoft.com/en-us/azure/aks/use-network-policies"}," Read more at the official documentation site"),"."))),(0,l.kt)("details",null,(0,l.kt)("summary",null,"Integrate Otterize Cloud with your cluster"),(0,l.kt)("p",null,"Set ",(0,l.kt)("em",{parentName:"p"},"client id")," and ",(0,l.kt)("em",{parentName:"p"},"client secret")," to your values and run:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-shell"},"helm upgrade --install otterize otterize/otterize-kubernetes \\\n-n otterize-system --create-namespace \\\n--set global.otterizeCloud.credentials.clientId=client_id \\\n--set global.otterizeCloud.credentials.clientSecret=client_secret \\\n--set credentialsOperator.useOtterizeCloud=true\n"))),(0,l.kt)("h2",{id:"environment-setup"},"Environment setup"),(0,l.kt)("h3",{id:"deploy-the-reference-lab-with-mtls-for-kafka-and-its-clients"},"Deploy the reference lab with mTLS for Kafka and its clients"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"kubectl create namespace otterize-ecom-kafka-demo\nkubectl apply -n otterize-ecom-kafka-demo -f https://docs.otterize.com/code-examples/shadow-mode/ecom-demo-mtls.yaml\n")),(0,l.kt)("details",null,(0,l.kt)("summary",null,"Optional: check that the lab was deployed..."),(0,l.kt)("div",null,(0,l.kt)("p",null,"To see all the pods in the lab:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"kubectl get pods -n otterize-ecom-kafka-demo\n")),(0,l.kt)("p",null,"The pods should all be ready and running:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"NAME                                     READY   STATUS    RESTARTS   AGE\nadservice-694f4ff98-cz4nn                1/1     Running   0          23m\ncartservice-85f8bc44fd-45cbk             1/1     Running   0          23m\ncheckoutservice-8fc47bbbd-9lhfv          1/1     Running   0          23m\ncurrencyservice-597bdf576b-8hftc         1/1     Running   0          23m\nemailservice-d5c6f74dd-qlwc4             1/1     Running   0          23m\nfrontend-7ffbf49884-j9rhz                1/1     Running   0          23m\nloadgenerator-65779994db-tgdxk           1/1     Running   0          23m\npaymentservice-76b9c8b87d-ktfcd          1/1     Running   0          23m\nproductcatalogservice-6969d4f5fd-xdw99   1/1     Running   0          23m\nrecommendationservice-58798d5c8-2f4rz    1/1     Running   0          23m\nredis-cart-6f65887b5d-xwpz5              1/1     Running   0          23m\nshippingservice-ff5f4d7d-qcjw8           1/1     Running   0          23m\n")))),(0,l.kt)("details",null,(0,l.kt)("summary",null,"Optional: Browse the lab"),(0,l.kt)(o.Z,{groupId:"frontend-addr",mdxType:"Tabs"},(0,l.kt)(r.Z,{value:"k8s",label:"K8s",mdxType:"TabItem"},(0,l.kt)("p",null,"To get the externally-accessible URL where your demo front end is available, run:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"kubectl get service -n otterize-ecom-kafka-demo frontend-external | awk '{print $4}'\n")),(0,l.kt)("p",null,"The result should be similar to (if running on AWS EKS):"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre"},"a11843075fd254f8099a986467098647-1889474685.us-east-1.elb.amazonaws.com\n")),(0,l.kt)("p",null,'Go ahead and browse to the URL above to "shop" and get a feel for the reference lab\'s behavior.\n(The URL might take some time to populate across DNS servers. Note that we are accessing an HTTP and not an HTTPS website.)')),(0,l.kt)(r.Z,{value:"minikube",label:"Minikube",mdxType:"TabItem"},(0,l.kt)("p",null,"To get the externally-accessible URL where your demo front end is available, run:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre"},"kubectl port-forward -n otterize-ecom-kafka-demo service/frontend-external 8080:80 &\n")),(0,l.kt)("p",null,"The demo is now accessible at:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre"},"http://localhost:8080\n")),(0,l.kt)("p",null,'Go ahead and browse to the URL above to "shop" and get a feel for the reference lab\'s behavior.')))),(0,l.kt)("h3",{id:"apply-intents-for-workloads"},"Apply intents for workloads"),(0,l.kt)("admonition",{type:"info"},(0,l.kt)("p",{parentName:"admonition"},"This demo picks up where the network policies demo left off, so we'll put in place the same intents that we had in that demo and then add the kafka intents")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"kubectl apply -n otterize-ecom-kafka-demo -f https://docs.otterize.com/code-examples/shadow-mode/all.yaml\n")),(0,l.kt)("h2",{id:"manage-kafka-access-with-otterize"},"Manage Kafka access with Otterize"),(0,l.kt)("p",null,"Let's connect Kafka with Otterize by applying a ",(0,l.kt)("inlineCode",{parentName:"p"},"KafkaServerConfig"),":"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"kubectl apply -n otterize-ecom-kafka-demo -f https://docs.otterize.com/code-examples/shadow-mode/kafkaserverconfig.yaml\n")),(0,l.kt)("details",null,(0,l.kt)("summary",null,"Expand to see the KafkaServerConfig"),(0,l.kt)(o.Z,{mdxType:"Tabs"},(0,l.kt)(r.Z,{value:"kafkaserverconfig.yaml",label:"kafkaserverconfig.yaml",mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-yaml"},'apiVersion: k8s.otterize.com/v1alpha2\nkind: KafkaServerConfig\nmetadata:\n  name: kafkaserverconfig\n  namespace: otterize-ecom-kafka-demo\nspec:\n  service:\n    name: kafka\n  addr: kafka-headless.otterize-ecom-kafka-demo:9092\n  tls:\n    certFile: /etc/otterize-spire/cert.pem\n    keyFile: /etc/otterize-spire/key.pem\n    rootCAFile: /etc/otterize-spire/ca.pem\n  topics:\n    - topic: "*"\n      pattern: prefix\n      clientIdentityRequired: false\n      intentsRequired: false\n'))))),(0,l.kt)("p",null,"Upon applying the KafkaServerConfig, an ACL will configure Kafka to allow anonymous access all topics.\nThis will be the base state, from which we will gradually roll out secure access to Kafka."),(0,l.kt)("p",null,"We can see in the access graph that the node is marked with a ",(0,l.kt)("inlineCode",{parentName:"p"},"Kafka")," and ",(0,l.kt)("inlineCode",{parentName:"p"},"KSC")," icons."),(0,l.kt)("p",null,(0,l.kt)("img",{alt:"Kafka Server Config",src:a(5096).Z,width:"505",height:"412"})),(0,l.kt)("p",null,"By clicking the Kafka node twice and switching to focus mode we'll be able to inspect its configuration and credentials."),(0,l.kt)("p",null,(0,l.kt)("img",{alt:"Kafka Server Config",src:a(5237).Z,width:"909",height:"441"})),(0,l.kt)("h2",{id:"declare-kafka-intents"},"Declare Kafka intents"),(0,l.kt)("p",null,"Otterize can now configure Kafka ACLs so let's go ahead and create client intents files for the services communicating with Kafka."),(0,l.kt)(o.Z,{mdxType:"Tabs"},(0,l.kt)(r.Z,{value:"checkoutservice",label:"checkoutservice",default:!0,mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-yaml"},"apiVersion: k8s.otterize.com/v1alpha2\nkind: ClientIntents\nmetadata:\n  name: checkoutservice\nspec:\n  service:\n    name: checkoutservice\n  calls:\n    - name: kafka\n      type: kafka\n      topics:\n        - name: orders\n          operations: [ produce ]\n    - name: cartservice\n    - name: currencyservice\n    - name: emailservice\n    - name: paymentservice\n    - name: productcatalogservice\n    - name: shippingservice\n"))),(0,l.kt)(r.Z,{value:"orderservice",label:"orderservice",default:!0,mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-yaml"},"apiVersion: k8s.otterize.com/v1alpha2\nkind: ClientIntents\nmetadata:\n  name: orderservice\nspec:\n  service:\n    name: orderservice\n  calls:\n    - name: kafka\n      type: kafka\n      topics:\n        - name: orders\n          operations: [ consume ]\n    - name: emailservice\n\n"))),(0,l.kt)(r.Z,{value:"paymentservice",label:"paymentservice",default:!0,mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-yaml"},"apiVersion: k8s.otterize.com/v1alpha2\nkind: ClientIntents\nmetadata:\n  name: paymentservice\nspec:\n  service:\n    name: paymentservice\n  calls:\n    - name: kafka\n      type: kafka\n      topics:\n        - name: payments\n          operations: [ produce ]\n\n")))),(0,l.kt)("p",null,"And apply them with"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"kubectl apply -n otterize-ecom-kafka-demo -f https://docs.otterize.com/code-examples/shadow-mode/kafka-intents.yaml\n")),(0,l.kt)("p",null,"We can immediatly see that the relevant edges are marked with the Kafka icon."),(0,l.kt)("p",null,(0,l.kt)("img",{alt:"Kafka Server Config",src:a(5948).Z,width:"911",height:"442"})),(0,l.kt)("p",null,"And by clicking each of these edge we are able to see the specific topics declared by the client workload for access."),(0,l.kt)("p",null,(0,l.kt)("img",{alt:"Kafka Server Config",src:a(8693).Z,width:"1113",height:"474"})),(0,l.kt)("admonition",{type:"note"},(0,l.kt)("p",{parentName:"admonition"},"You can verify that the reference lab still functions as intended.")),(0,l.kt)("h2",{id:"whats-next"},"What's next"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"/quick-tutorials/k8s-mtls"},"Rollout mTLS")," between your workloads."),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"/quick-tutorials/k8s-kafka-mtls"},"Deploy a dedicated Kafka broker and take it for a spin using intents"),".")),(0,l.kt)("h2",{id:"teardown"},"Teardown"),(0,l.kt)("p",null,"To remove the deployed lab delete the client intents:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"kubectl delete -n otterize-ecom-kafka-demo -f https://docs.otterize.com/code-examples/shadow-mode/all.yaml\n")),(0,l.kt)("p",null,"Then remove the Kafka Server Config:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"kubectl delete -n otterize-ecom-kafka-demo -f https://docs.otterize.com/code-examples/shadow-mode/kafkaserverconfig.yaml\n")),(0,l.kt)("p",null,"And then remove the lab and the namespace:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"kubectl delete -n otterize-ecom-kafka-demo -f https://docs.otterize.com/code-examples/shadow-mode/ecom-demo-mtls.yaml\nkubectl delete namespace otterize-ecom-kafka-demo\n")))}m.isMDXComponent=!0},8693:(e,t,a)=>{a.d(t,{Z:()=>n});const n=a.p+"assets/images/kafka-edge-modal-4438d152191a487069a17e74fa1a889d.png"},5948:(e,t,a)=>{a.d(t,{Z:()=>n});const n=a.p+"assets/images/kafka-edges-16280e1b3ec639738af60c55580b6f7b.png"},5237:(e,t,a)=>{a.d(t,{Z:()=>n});const n=a.p+"assets/images/kafka-focus-18c8030ba1c34615e5e50d855377f20c.png"},5096:(e,t,a)=>{a.d(t,{Z:()=>n});const n=a.p+"assets/images/kafka-node-d5de4a87584e29d4cf6889ddda3d9a37.png"}}]);