"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[624],{2440:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>c,contentTitle:()=>p,default:()=>m,frontMatter:()=>s,metadata:()=>d,toc:()=>u});var l=a(7462),n=(a(7294),a(3905)),o=a(3901),i=a(5488),r=a(5162);const s={sidebar_position:3},p="Network Policies",d={unversionedId:"documentation/getting-started/tutorials/network-policies",id:"documentation/getting-started/tutorials/network-policies",title:"Network Policies",description:"Get started with Otterize.",source:"@site/docs/documentation/getting-started/tutorials/network-policies.md",sourceDirName:"documentation/getting-started/tutorials",slug:"/documentation/getting-started/tutorials/network-policies",permalink:"/documentation/getting-started/tutorials/network-policies",draft:!1,editUrl:"https://github.com/otterize/docs/edit/main/docs/documentation/getting-started/tutorials/network-policies.md",tags:[],version:"current",sidebarPosition:3,frontMatter:{sidebar_position:3},sidebar:"docSidebar",previous:{title:"Deploy mTLS",permalink:"/documentation/getting-started/tutorials/mtls"},next:{title:"index",permalink:"/documentation/guides/"}},c={},u=[{value:"Install Otterize (enable Network Policies)",id:"install-otterize-enable-network-policies",level:2},{value:"Concepts",id:"concepts",level:2},{value:"Otterize pod identity resolution",id:"otterize-pod-identity-resolution",level:3},{value:"Demo",id:"demo",level:2},{value:"Deploy sample project",id:"deploy-sample-project",level:3},{value:"Apply intents",id:"apply-intents",level:3},{value:"Inspect generated Network Policies",id:"inspect-generated-network-policies",level:3},{value:"Teardown",id:"teardown",level:3},{value:"Test what\u2019s protected now relative to scope:",id:"test-whats-protected-now-relative-to-scope",level:2}],k={toc:u};function m(e){let{components:t,...a}=e;return(0,n.kt)("wrapper",(0,l.Z)({},k,a,{components:t,mdxType:"MDXLayout"}),(0,n.kt)("h1",{id:"network-policies"},"Network Policies"),(0,n.kt)("p",null,"Get started with Otterize."),(0,n.kt)(o.Z,{toc:u,mdxType:"TOCInline"}),(0,n.kt)("h2",{id:"install-otterize-enable-network-policies"},"Install Otterize (enable Network Policies)"),(0,n.kt)("p",null,"Module"),(0,n.kt)("h2",{id:"concepts"},"Concepts"),(0,n.kt)("h3",{id:"otterize-pod-identity-resolution"},"Otterize pod identity resolution"),(0,n.kt)("p",null,"Otterize resolves pod identities automatically by using their ",(0,n.kt)("inlineCode",{parentName:"p"},"resource owner")," (e.g. deployment) ",(0,n.kt)("strong",{parentName:"p"},"name")," and ",(0,n.kt)("strong",{parentName:"p"},"\nnamespace"),"."),(0,n.kt)("p",null,"In this example the pod identity will be resolved to ",(0,n.kt)("inlineCode",{parentName:"p"},"client.tutorial"),"."),(0,n.kt)("admonition",{type:"note"},(0,n.kt)("p",{parentName:"admonition"},"To read more about how Otterize resolves pod identities and how to manually control the process pleas read XXX.")),(0,n.kt)("h2",{id:"demo"},"Demo"),(0,n.kt)("h3",{id:"deploy-sample-project"},"Deploy sample project"),(0,n.kt)("p",null,"Let's add traffic to the cluster and see how the Network Policies can be easily configured on it with Otterize.\nYou can do that by deploying our example which consists of three pods: client-allowed, client-blocked and server,\ncommunicating over HTTP."),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-shell"},"kubectl create namespace otterize-tutorial-network-policies && \\\nkubectl apply -n otterize-tutorial-network-policies -f code-examples/getting-started/tutorials/network-policies\n")),(0,n.kt)("details",null,(0,n.kt)("summary",null,"Output"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-shell"},"namespace/otterize-tutorial-network-policies created\ndeployment.apps/client-allowed created\ndeployment.apps/client-blocked created\nintents.otterize.com/client-allowed created\ndeployment.apps/server created\nservice/server created\n"))),(0,n.kt)("h3",{id:"apply-intents"},"Apply intents"),(0,n.kt)(i.Z,{mdxType:"Tabs"},(0,n.kt)(r.Z,{value:"otterize",label:"Otterize",default:!0,mdxType:"TabItem"},(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-shell"},"otterize apply intents\n"))),(0,n.kt)(r.Z,{value:"kubectl",label:"Kubectl",mdxType:"TabItem"},(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-shell"},"kubectl apply -f intents.yaml\n")))),(0,n.kt)("h3",{id:"inspect-generated-network-policies"},"Inspect generated Network Policies"),(0,n.kt)("p",null,"Look at the generated network policies that have been applied"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-shell"},"kubectl get networkpolicies -n lab\n")),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-shell"},"NAMESPACE   NAME                            POD-SELECTOR                                AGE\nlab         access-to-zookeeper-from-kafka  otterize/server=zookeeper-lab-c7544928bffa  116m\nlab         access-to-kafka-from-client     otterize/server=kafka-lab-05a2278fbe7a      4m17s\n")),(0,n.kt)("p",null,"Look at the generated pod labels"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-shell"},"kubectl get pod -n lab client-66b6c48dd5-s8xs9 --show-labels\n")),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-shell"},"NAME                      READY   STATUS    RESTARTS    AGE     LABELS\nclient-66b6c48dd5-s8xs9    1/1     Running   0           7d1h    app=client,otterize/server=client-lab-05a2278fbe7a\n")),(0,n.kt)("h3",{id:"teardown"},"Teardown"),(0,n.kt)("p",null,"To remove the deployed resources run"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-bash"},"kubectl delete namespace otterize-tutorial-mapper\n")),(0,n.kt)("h2",{id:"test-whats-protected-now-relative-to-scope"},"Test what\u2019s protected now relative to scope:"),(0,n.kt)("admonition",{type:"caution"},(0,n.kt)("p",{parentName:"admonition"},"To expand")),(0,n.kt)("ol",null,(0,n.kt)("li",{parentName:"ol"},"Client-server scope:",(0,n.kt)("ul",{parentName:"li"},(0,n.kt)("li",{parentName:"ul"},"If there were other clients to this server, see they\u2019re now failing"))),(0,n.kt)("li",{parentName:"ol"},"Bootstrapped scope:",(0,n.kt)("ul",{parentName:"li"},(0,n.kt)("li",{parentName:"ul"},"See if something that was not captured in the traffic is now failing"))),(0,n.kt)("li",{parentName:"ol"},"All scopes:",(0,n.kt)("ul",{parentName:"li"},(0,n.kt)("li",{parentName:"ul"},"Omit a client intents file, apply intents again, and see the client is failing"),(0,n.kt)("li",{parentName:"ul"},"Change a service to make an undeclared call and redeploy, see it fails"),(0,n.kt)("li",{parentName:"ul"},"Create a test service making an undeclared call, deploy, see it fails")))))}m.isMDXComponent=!0}}]);