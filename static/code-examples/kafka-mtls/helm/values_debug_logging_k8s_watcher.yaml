# Configure Otterize as a super user to grant it access to configure ACLs
superUsers: "User:CN=kafka.kafka,O=SPIRE,C=US;User:CN=intents-operator-controller-manager.otterize,O=SPIRE,C=US"
# Use TLS for the Kafka listeners (Kafka calls them SSL)
listeners:
  - "CLIENT://:9092"
  - "INTERNAL://:9093"
advertisedListeners:
  - "CLIENT://:9092"
  - "INTERNAL://:9093"
listenerSecurityProtocolMap: "INTERNAL:SSL,CLIENT:SSL"
# For a gradual rollout scenario we will want to keep the default permission for topics as allowed, unless an ACL was set
allowEveryoneIfNoAclFound: true
# Annotations for Otterize to generate credentials
podAnnotations:
  credentials-operator.otterize.com/cert-type: jks
  credentials-operator.otterize.com/tls-secret-name: kafka-tls-secret
  credentials-operator.otterize.com/truststore-file-name: kafka.truststore.jks
  credentials-operator.otterize.com/keystore-file-name: kafka.keystore.jks
  credentials-operator.otterize.com/dns-names: "kafka-0.kafka-headless.kafka.svc.cluster.local,kafka.kafka.svc.cluster.local"
# Authenticate clients using mTLS
auth:
  clientProtocol: mtls
  interBrokerProtocol: mtls
  tls:
    type: jks
    existingSecrets:
      - kafka-tls-secret
    password: password
authorizerClassName: kafka.security.authorizer.AclAuthorizer
# Allocate resources
resources:
  requests:
    cpu: 50m
    memory: 256Mi
sidecars:
  - name: otterize-sidecar
    image: otterize/network-mapper-kafka-watcher:dev
    imagePullPolicy: Never
    volumeMounts:
      - mountPath: /opt/otterize/kafka-watcher
        name: kafka-authz-logs
    env:
      - name: OTTERIZE_MAPPER_API_URL
        value: http://otterize-network-mapper.otterize-system.svc:9090/query
      - name: OTTERIZE_DEBUG
        value: "False"
      - name: OTTERIZE_POD
        valueFrom:
          fieldRef:
            fieldPath: metadata.name
      - name: OTTERIZE_NAMESPACE
        valueFrom:
          fieldRef:
            fieldPath: metadata.namespace
extraVolumes:
  - name: kafka-authz-logs
    emptyDir:
extraVolumeMounts:
  - mountPath: /opt/otterize/kafka-watcher
    name: kafka-authz-logs
log4j: |
  log4j.rootLogger=INFO, stdout

  log4j.appender.stdout=org.apache.log4j.ConsoleAppender
  log4j.appender.stdout.layout=org.apache.log4j.PatternLayout
  log4j.appender.stdout.layout.ConversionPattern=[%d] %p %m (%c)%n
  
  log4j.appender.authorizerAppender=org.apache.log4j.FileAppender
  log4j.appender.authorizerAppender.layout=org.apache.log4j.PatternLayout
  log4j.appender.authorizerAppender.layout.ConversionPattern=[%d] %p %m (%c)%n
  log4j.appender.authorizerAppender.file=/opt/otterize/kafka-watcher/authz.log

  # Access denials are logged at INFO level, change to DEBUG to also log allowed accesses
  log4j.logger.kafka.authorizer.logger=DEBUG, authorizerAppender
  log4j.additivity.kafka.authorizer.logger=false
